{
  "version": 3,
  "sources": ["../../../src/cube.ts"],
  "sourcesContent": ["class RubiksCube {\n    // Define the initial state of the cube\n    edgePermutation: number[]; // An array representing the position of each edge (0-11)\n    edgeOrientation: boolean[]; // An array representing the orientation of each edge\n    cornerPermutation: number[]; // An array representing the position of each corner (0-7)\n    cornerOrientation: number[]; // An array representing the orientation of each corner (0-2)\n    solvedEdgePermutation = [...Array(12).keys()];\n    solvedEdgeOrientation = Array(12).fill(true);\n    solvedCornerPermutation = [...Array(8).keys()];\n    solvedCornerOrientation = Array(8).fill(0);\n  \n    constructor() {\n      // Initialize the cube with a solved state\n      this.edgePermutation = [...Array(12).keys()];\n      this.edgeOrientation = Array(12).fill(true); // All edges are initially oriented\n      this.cornerPermutation = [...Array(8).keys()];\n      this.cornerOrientation = Array(8).fill(0); // All corners are initially oriented\n    }\n  \n    solve() {\n      this.edgeOrientation = this.solvedEdgeOrientation;\n      this.edgePermutation = this.solvedEdgePermutation;\n      this.cornerOrientation = this.solvedCornerOrientation;\n      this.cornerPermutation = this.solvedCornerPermutation;\n    }\n  \n    cpSolved() {\n      return this.arraysEqual(\n        this.cornerPermutation,\n        this.solvedCornerPermutation\n      );\n    }\n  \n    // Apply a sequence of moves to the cube\n    applyMoves(moves: string) {\n      const moveRegex = /([RULDFB])([2']?)/g;\n      let match;\n  \n      while ((match = moveRegex.exec(moves))) {\n        const move = match[1];\n        const modifier = match[2];\n  \n        if (modifier === \"2\") {\n          this.performMove(move);\n          this.performMove(move);\n        } else if (modifier === \"'\") {\n          this.performMove(move);\n          this.performMove(move);\n          this.performMove(move);\n        } else {\n          this.performMove(move);\n        }\n      }\n    }\n  \n    // Helper method to perform a single move\n    private performMove(move: string) {\n      if (move === \"U\") {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[0];\n        this.edgePermutation[0] = this.edgePermutation[3];\n        this.edgePermutation[3] = this.edgePermutation[2];\n        this.edgePermutation[2] = this.edgePermutation[1];\n        this.edgePermutation[1] = tempEdgePermutation;\n        var tempEdgeOrientation = this.edgeOrientation[0];\n        this.edgeOrientation[0] = this.edgeOrientation[3];\n        this.edgeOrientation[3] = this.edgeOrientation[2];\n        this.edgeOrientation[2] = this.edgeOrientation[1];\n        this.edgeOrientation[1] = tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[0];\n        this.cornerPermutation[0] = this.cornerPermutation[3];\n        this.cornerPermutation[3] = this.cornerPermutation[2];\n        this.cornerPermutation[2] = this.cornerPermutation[1];\n        this.cornerPermutation[1] = tempCornerPermutation;\n        var tempCornerOrientation = this.cornerOrientation[0];\n        this.cornerOrientation[0] = this.cornerOrientation[3];\n        this.cornerOrientation[3] = this.cornerOrientation[2];\n        this.cornerOrientation[2] = this.cornerOrientation[1];\n        this.cornerOrientation[1] = tempCornerOrientation;\n      } else if (move === \"D\") {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[8];\n        this.edgePermutation[8] = this.edgePermutation[11];\n        this.edgePermutation[11] = this.edgePermutation[10];\n        this.edgePermutation[10] = this.edgePermutation[9];\n        this.edgePermutation[9] = tempEdgePermutation;\n  \n        var tempEdgeOrientation = this.edgeOrientation[8];\n        this.edgeOrientation[8] = this.edgeOrientation[11];\n        this.edgeOrientation[11] = this.edgeOrientation[10];\n        this.edgeOrientation[10] = this.edgeOrientation[9];\n        this.edgeOrientation[9] = tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[4];\n        this.cornerPermutation[4] = this.cornerPermutation[7];\n        this.cornerPermutation[7] = this.cornerPermutation[6];\n        this.cornerPermutation[6] = this.cornerPermutation[5];\n        this.cornerPermutation[5] = tempCornerPermutation;\n        var tempCornerOrientation = this.cornerOrientation[4];\n        this.cornerOrientation[4] = this.cornerOrientation[7];\n        this.cornerOrientation[7] = this.cornerOrientation[6];\n        this.cornerOrientation[6] = this.cornerOrientation[5];\n        this.cornerOrientation[5] = tempCornerOrientation;\n      } else if (move === \"R\") {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[1];\n        this.edgePermutation[1] = this.edgePermutation[6];\n        this.edgePermutation[6] = this.edgePermutation[9];\n        this.edgePermutation[9] = this.edgePermutation[5];\n        this.edgePermutation[5] = tempEdgePermutation;\n        var tempEdgeOrientation = this.edgeOrientation[1];\n        this.edgeOrientation[1] = this.edgeOrientation[6];\n        this.edgeOrientation[6] = this.edgeOrientation[9];\n        this.edgeOrientation[9] = this.edgeOrientation[5];\n        this.edgeOrientation[5] = tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[2];\n        var tempCornerOrientation = this.cornerOrientation[2];\n        this.cornerPermutation[2] = this.cornerPermutation[5];\n        this.cornerOrientation[2] = (this.cornerOrientation[5] + 2) % 3;\n        this.cornerPermutation[5] = this.cornerPermutation[6];\n        this.cornerOrientation[5] = (this.cornerOrientation[6] + 1) % 3;\n        this.cornerPermutation[6] = this.cornerPermutation[1];\n        this.cornerOrientation[6] = (this.cornerOrientation[1] + 2) % 3;\n        this.cornerPermutation[1] = tempCornerPermutation;\n        this.cornerOrientation[1] = (tempCornerOrientation + 1) % 3;\n      } else if (move === \"L\") {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[3];\n        this.edgePermutation[3] = this.edgePermutation[4];\n        this.edgePermutation[4] = this.edgePermutation[11];\n        this.edgePermutation[11] = this.edgePermutation[7];\n        this.edgePermutation[7] = tempEdgePermutation;\n        var tempEdgeOrientation = this.edgeOrientation[3];\n        this.edgeOrientation[3] = this.edgeOrientation[4];\n        this.edgeOrientation[4] = this.edgeOrientation[11];\n        this.edgeOrientation[11] = this.edgeOrientation[7];\n        this.edgeOrientation[7] = tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[0];\n        var tempCornerOrientation = this.cornerOrientation[0];\n        this.cornerPermutation[0] = this.cornerPermutation[7];\n        this.cornerOrientation[0] = (this.cornerOrientation[7] + 2) % 3;\n        this.cornerPermutation[7] = this.cornerPermutation[4];\n        this.cornerOrientation[7] = (this.cornerOrientation[4] + 1) % 3;\n        this.cornerPermutation[4] = this.cornerPermutation[3];\n        this.cornerOrientation[4] = (this.cornerOrientation[3] + 2) % 3;\n        this.cornerPermutation[3] = tempCornerPermutation;\n        this.cornerOrientation[3] = (tempCornerOrientation + 1) % 3;\n      } else if (move === \"F\") {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[2];\n        var tempEdgeOrientation = this.edgeOrientation[2];\n        this.edgePermutation[2] = this.edgePermutation[7];\n        this.edgeOrientation[2] = !this.edgeOrientation[7];\n        this.edgePermutation[7] = this.edgePermutation[8];\n        this.edgeOrientation[7] = !this.edgeOrientation[8];\n        this.edgePermutation[8] = this.edgePermutation[6];\n        this.edgeOrientation[8] = !this.edgeOrientation[6];\n        this.edgePermutation[6] = tempEdgePermutation;\n        this.edgeOrientation[6] = !tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[3];\n        var tempCornerOrientation = this.cornerOrientation[3];\n        this.cornerPermutation[3] = this.cornerPermutation[4];\n        this.cornerOrientation[3] = (this.cornerOrientation[4] + 2) % 3;\n        this.cornerPermutation[4] = this.cornerPermutation[5];\n        this.cornerOrientation[4] = (this.cornerOrientation[5] + 1) % 3;\n        this.cornerPermutation[5] = this.cornerPermutation[2];\n        this.cornerOrientation[5] = (this.cornerOrientation[2] + 2) % 3;\n        this.cornerPermutation[2] = tempCornerPermutation;\n        this.cornerOrientation[2] = (tempCornerOrientation + 1) % 3;\n      } else {\n        // Edge movements\n        var tempEdgePermutation = this.edgePermutation[0];\n        var tempEdgeOrientation = this.edgeOrientation[0];\n        this.edgePermutation[0] = this.edgePermutation[5];\n        this.edgeOrientation[0] = !this.edgeOrientation[5];\n        this.edgePermutation[5] = this.edgePermutation[10];\n        this.edgeOrientation[5] = !this.edgeOrientation[10];\n        this.edgePermutation[10] = this.edgePermutation[4];\n        this.edgeOrientation[10] = !this.edgeOrientation[4];\n        this.edgePermutation[4] = tempEdgePermutation;\n        this.edgeOrientation[4] = !tempEdgeOrientation;\n  \n        // Corner movements\n        var tempCornerPermutation = this.cornerPermutation[1];\n        var tempCornerOrientation = this.cornerOrientation[1];\n        this.cornerPermutation[1] = this.cornerPermutation[6];\n        this.cornerOrientation[1] = (this.cornerOrientation[6] + 2) % 3;\n        this.cornerPermutation[6] = this.cornerPermutation[7];\n        this.cornerOrientation[6] = (this.cornerOrientation[7] + 1) % 3;\n        this.cornerPermutation[7] = this.cornerPermutation[0];\n        this.cornerOrientation[7] = (this.cornerOrientation[0] + 2) % 3;\n        this.cornerPermutation[0] = tempCornerPermutation;\n        this.cornerOrientation[0] = (tempCornerOrientation + 1) % 3;\n      }\n    }\n  \n    // Check if the cube is solved\n    isSolved(): boolean {\n      return (\n        this.arraysEqual(this.edgeOrientation, this.solvedEdgeOrientation) &&\n        this.arraysEqual(this.cornerOrientation, this.solvedCornerOrientation) &&\n        this.arraysEqual(this.edgePermutation, this.solvedEdgePermutation) &&\n        this.arraysEqual(this.cornerPermutation, this.solvedCornerPermutation)\n      );\n    }\n  \n    fbEoSovled(): boolean {\n      return this.arraysEqual(this.edgeOrientation, this.solvedEdgeOrientation);\n    }\n  \n    udDrSolved(): boolean {\n      return (\n        this.arraysEqual(this.edgeOrientation, this.solvedEdgeOrientation) &&\n        this.arraysEqual(this.cornerOrientation, this.solvedCornerOrientation) &&\n        this.edgePermutation[4] > 3 &&\n        this.edgePermutation[4] < 8 &&\n        this.edgePermutation[5] > 3 &&\n        this.edgePermutation[5] < 8 &&\n        this.edgePermutation[6] > 3 &&\n        this.edgePermutation[6] < 8 &&\n        this.edgePermutation[7] > 3 &&\n        this.edgePermutation[7] < 8\n      );\n    }\n  \n    allOpposites(): boolean {\n      return (\n        this.udDrSolved &&\n        this.cornerPermutation[0] % 2 === 0 &&\n        this.cornerPermutation[2] % 2 === 0 &&\n        this.cornerPermutation[4] % 2 === 0 &&\n        this.cornerPermutation[6] % 2 === 0 &&\n        this.cornerPermutation[1] % 2 === 1 &&\n        this.cornerPermutation[3] % 2 === 1 &&\n        this.cornerPermutation[5] % 2 === 1 &&\n        this.cornerPermutation[7] % 2 === 1 &&\n        (this.edgePermutation[0] === 0 ||\n          this.edgePermutation[0] === 2 ||\n          this.edgePermutation[0] === 8 ||\n          this.edgePermutation[0] === 10) &&\n        (this.edgePermutation[2] === 0 ||\n          this.edgePermutation[2] === 2 ||\n          this.edgePermutation[2] === 8 ||\n          this.edgePermutation[2] === 10) &&\n        (this.edgePermutation[8] === 0 ||\n          this.edgePermutation[8] === 2 ||\n          this.edgePermutation[8] === 8 ||\n          this.edgePermutation[8] === 10) &&\n        (this.edgePermutation[10] === 0 ||\n          this.edgePermutation[10] === 2 ||\n          this.edgePermutation[10] === 8 ||\n          this.edgePermutation[10] === 10) &&\n        (this.edgePermutation[1] === 1 ||\n          this.edgePermutation[1] === 3 ||\n          this.edgePermutation[1] === 9 ||\n          this.edgePermutation[1] === 11) &&\n        (this.edgePermutation[3] === 1 ||\n          this.edgePermutation[3] === 3 ||\n          this.edgePermutation[3] === 9 ||\n          this.edgePermutation[3] === 11) &&\n        (this.edgePermutation[9] === 1 ||\n          this.edgePermutation[9] === 3 ||\n          this.edgePermutation[9] === 9 ||\n          this.edgePermutation[9] === 11) &&\n        (this.edgePermutation[11] === 1 ||\n          this.edgePermutation[11] === 3 ||\n          this.edgePermutation[11] === 9 ||\n          this.edgePermutation[11] === 11)\n      );\n    }\n  \n    private arraysEqual(arr1: any[], arr2: any[]): boolean {\n      if (arr1.length !== arr2.length) return false;\n      for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n      }\n      return true;\n    }\n\n    public areEqual(cube: RubiksCube): boolean {\n        return (\n            this.arraysEqual(this.edgePermutation, cube.edgePermutation) &&\n            this.arraysEqual(this.edgeOrientation, cube.edgeOrientation) &&\n            this.arraysEqual(this.cornerPermutation, cube.cornerPermutation) &&\n            this.arraysEqual(this.cornerOrientation, cube.cornerOrientation)\n        );\n        }\n  }\n  \n  export { RubiksCube };"],
  "mappings": "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",
  "names": []
}

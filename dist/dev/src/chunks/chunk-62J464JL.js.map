{
  "version": 3,
  "sources": ["../../../../node_modules/cubing/src/cubing/kpuzzle/combine.ts", "../../../../node_modules/cubing/src/cubing/kpuzzle/construct.ts", "../../../../node_modules/cubing/src/cubing/kpuzzle/KPattern.ts", "../../../../node_modules/cubing/src/cubing/kpuzzle/KTransformation.ts", "../../../../node_modules/cubing/src/cubing/kpuzzle/calculate.ts", "../../../../node_modules/cubing/src/cubing/kpuzzle/KPuzzle.ts", "../../../../node_modules/cubing/src/cubing/vendor/mit/p-lazy/p-lazy.ts", "../../../../node_modules/cubing/src/cubing/puzzles/stickerings/mask.ts", "../../../../node_modules/cubing/src/cubing/puzzles/stickerings/puzzle-stickerings.ts", "../../../../node_modules/cubing/src/cubing/puzzles/stickerings/cube-like-stickerings.ts", "../../../../node_modules/cubing/src/cubing/puzzles/async/lazy-cached.ts", "../../../../node_modules/cubing/src/cubing/puzzles/async/async-pg3d.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/3x3x3/3x3x3.kpuzzle.json.ts", "../../../../node_modules/cubing/src/cubing/puzzles/PuzzleLoader.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/2x2x2/puzzle-orientation.ts", "../../../../node_modules/cubing/src/cubing/puzzles/customPGPuzzleLoader.ts", "../../../../node_modules/cubing/src/cubing/puzzles/cubing-private/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/dynamic/3x3x3/puzzle-orientation.ts", "../../../../node_modules/cubing/src/cubing/puzzles/events.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/2x2x2/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/3x3x3/cube3x3x3KeyMapping.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/3x3x3/puzzle-specific-simplifications.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/3x3x3/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/4x4x4/cube4x4x4KeyMapping.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/4x4x4/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/stickerings/fto-stickerings.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/fto/ftoKeyMapping.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/baby_fto/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/clock/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/fto/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/kilominx/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/loopover/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/stickerings/megaminx-stickerings.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/megaminx/megaminxKeyMapping.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/megaminx/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/melindas2x2x2x2/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/pyraminx/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/redi-cube/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/square1/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/implementations/tri_quad/index.ts", "../../../../node_modules/cubing/src/cubing/puzzles/index.ts", "../../../../node_modules/cubing/src/cubing/twisty/debug.ts", "../../../../node_modules/cubing/src/cubing/twisty/model/PromiseFreshener.ts", "../../../../node_modules/cubing/src/cubing/twisty/model/props/TwistyProp.ts", "../../../../node_modules/cubing/src/cubing/twisty/controllers/RenderScheduler.ts", "../../../../node_modules/cubing/src/cubing/twisty/model/props/puzzle/display/HintFaceletProp.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/TAU.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/node-custom-element-shims.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/ManagedCustomElement.ts", "../../../../node_modules/cubing/src/cubing/vendor/mit/three/examples/jsm/libs/stats.modified.module.ts", "../../../../node_modules/cubing/src/cubing/twisty/heavy-code-imports/3d.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/canvas.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/DragTracker.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/RendererPool.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/Twisty3DVantage.css.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/TwistyOrbitControls.ts", "../../../../node_modules/cubing/src/cubing/twisty/views/3D/Twisty3DVantage.ts"],
  "sourcesContent": ["import { isOrbitTransformationDataIdentityUncached } from \"./calculate\";\nimport type {\n  KPuzzleDefinition,\n  KPatternData,\n  KPatternOrbitData,\n  KTransformationData,\n} from \"./KPuzzleDefinition\";\n\nexport function combineTransformationData(\n  definition: KPuzzleDefinition,\n  transformationData1: KTransformationData,\n  transformationData2: KTransformationData,\n): KTransformationData {\n  const newTransformationData = {} as KTransformationData;\n  for (const orbitDefinition of definition.orbits) {\n    const orbit1 = transformationData1[orbitDefinition.orbitName];\n    const orbit2 = transformationData2[orbitDefinition.orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbit2,\n      )\n    ) {\n      // common case for big cubes\n      newTransformationData[orbitDefinition.orbitName] = orbit1;\n    } else if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbit1,\n      )\n    ) {\n      newTransformationData[orbitDefinition.orbitName] = orbit2;\n    } else {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      if (orbitDefinition.numOrientations === 1) {\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newPerm[idx] = orbit1.permutation[orbit2.permutation[idx]];\n        }\n        newTransformationData[orbitDefinition.orbitName] = {\n          permutation: newPerm,\n          orientationDelta: orbit1.orientationDelta,\n        };\n      } else {\n        const newOri = new Array(orbitDefinition.numPieces);\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newOri[idx] =\n            (orbit1.orientationDelta[orbit2.permutation[idx]] +\n              orbit2.orientationDelta[idx]) %\n            orbitDefinition.numOrientations;\n          newPerm[idx] = orbit1.permutation[orbit2.permutation[idx]];\n        }\n        newTransformationData[orbitDefinition.orbitName] = {\n          permutation: newPerm,\n          orientationDelta: newOri,\n        };\n      }\n    }\n  }\n  return newTransformationData;\n}\n\nexport function applyTransformationDataToKPatternData(\n  definition: KPuzzleDefinition,\n  patternData: KPatternData,\n  transformationData: KTransformationData,\n): KPatternData {\n  const newPatternData = {} as KPatternData;\n  for (const orbitDefinition of definition.orbits) {\n    const patternOrbit = patternData[orbitDefinition.orbitName];\n    const transformationOrbit = transformationData[orbitDefinition.orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        transformationOrbit,\n      )\n    ) {\n      // common case for big cubes\n      newPatternData[orbitDefinition.orbitName] = patternOrbit;\n    } else {\n      const newPieces = new Array(orbitDefinition.numPieces);\n      if (orbitDefinition.numOrientations === 1) {\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          newPieces[idx] =\n            patternOrbit.pieces[transformationOrbit.permutation[idx]];\n        }\n        const newOrbitData: KPatternOrbitData = {\n          pieces: newPieces,\n          orientation: patternOrbit.orientation, // copy all 0\n        };\n        newPatternData[orbitDefinition.orbitName] = newOrbitData;\n      } else {\n        const newOrientation = new Array(orbitDefinition.numPieces);\n        const newOrientationMod: number[] | undefined =\n          patternOrbit.orientationMod\n            ? new Array(orbitDefinition.numPieces)\n            : undefined;\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          const transformationIdx = transformationOrbit.permutation[idx];\n          let mod = orbitDefinition.numOrientations;\n          if (patternOrbit.orientationMod) {\n            const orientationMod =\n              patternOrbit.orientationMod[transformationIdx];\n            newOrientationMod![idx] = orientationMod;\n            mod = orientationMod || orbitDefinition.numOrientations;\n          }\n          newOrientation[idx] =\n            (patternOrbit.orientation[transformationIdx] +\n              transformationOrbit.orientationDelta[idx]) %\n            mod; // We don't have to use `modIntoRange` (assuming input is well-formed), because we're adding.\n          newPieces[idx] = patternOrbit.pieces[transformationIdx];\n        }\n        const newOrbitData: KPatternOrbitData = {\n          pieces: newPieces,\n          orientation: newOrientation,\n        };\n        if (newOrientationMod) {\n          newOrbitData.orientationMod = newOrientationMod;\n        }\n        newPatternData[orbitDefinition.orbitName] = newOrbitData;\n      }\n    }\n  }\n  return newPatternData;\n}\n", "import type { Move } from \"../alg\";\nimport { repeatTransformationUncached } from \"./calculate\";\nimport type { KPuzzle } from \"./KPuzzle\";\nimport type {\n  KPuzzleDefinition,\n  KTransformationData,\n  KTransformationOrbitData,\n} from \"./KPuzzleDefinition\";\n\nconst FREEZE: boolean = false;\n\nconst identityOrbitCache = new Map<number, KTransformationOrbitData>();\nfunction constructIdentityOrbitTransformation(\n  numPieces: number,\n): KTransformationOrbitData {\n  const cached = identityOrbitCache.get(numPieces);\n  if (cached) {\n    return cached;\n  }\n\n  const newPermutation = new Array(numPieces);\n  const newOrientation = new Array(numPieces);\n  for (let i = 0; i < numPieces; i++) {\n    newPermutation[i] = i;\n    newOrientation[i] = 0;\n  }\n  const orbitTransformation = {\n    permutation: newPermutation,\n    orientationDelta: newOrientation,\n  };\n  if (FREEZE) {\n    Object.freeze(newPermutation); // TODO\n    Object.freeze(newOrientation); // TODO\n    Object.freeze(orbitTransformation); // TODO\n  }\n  identityOrbitCache.set(numPieces, orbitTransformation);\n  return orbitTransformation;\n}\n\nexport function constructIdentityTransformationDataUncached(\n  definition: KPuzzleDefinition,\n): KTransformationData {\n  const transformation = {} as KTransformationData;\n  for (const orbitDefinition of definition.orbits) {\n    transformation[orbitDefinition.orbitName] =\n      constructIdentityOrbitTransformation(orbitDefinition.numPieces);\n  }\n  if (FREEZE) {\n    Object.freeze(transformation); // TODO\n  }\n  return transformation;\n}\n\nexport function moveToTransformationUncached(\n  kpuzzle: KPuzzle,\n  move: Move,\n): KTransformationData {\n  function getTransformationData(\n    key: {\n      toString: () => string;\n    },\n    multiplyAmount: number,\n  ): KTransformationData | undefined {\n    const s = key.toString();\n    const movesDef = kpuzzle.definition.moves[s];\n    if (movesDef) {\n      return repeatTransformationUncached(kpuzzle, movesDef, multiplyAmount);\n    }\n    const derivedDef = kpuzzle.definition.derivedMoves?.[s];\n    if (derivedDef) {\n      return repeatTransformationUncached(\n        kpuzzle,\n        kpuzzle.algToTransformation(derivedDef).transformationData,\n        multiplyAmount,\n      );\n    }\n    return undefined;\n  }\n\n  // TODO: Use Euclid's algorithm to pre-calculate the GCD of moves for each\n  // quantum, along with its transformation. This will make lookup `O(1)` for multiples of e.g. `y2`.\n\n  const data =\n    getTransformationData(move.quantum, move.amount) ??\n    // Handle e.g. `y2` if `y2` is defined.\n    // Note: this doesn't handle multiples.\n    getTransformationData(move, 1) ??\n    // Handle e.g. `y2'` if `y2` is defined.\n    // Note: this doesn't handle multiples.\n    getTransformationData(move.invert, -1);\n\n  if (data) {\n    return data;\n  }\n  throw new Error(`Invalid move for KPuzzle (${kpuzzle.name()}): ${move}`);\n}\n", "import type { Alg, Move } from \"../alg\";\nimport { isPatternDataIdentical } from \"./calculate\";\nimport { applyTransformationDataToKPatternData } from \"./combine\";\nimport type { KPuzzle, KTransformationSource } from \"./KPuzzle\";\nimport type {\n  KPatternData,\n  KTransformationData,\n  KTransformationOrbitData,\n} from \"./KPuzzleDefinition\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport class KPattern {\n  constructor(\n    public readonly kpuzzle: KPuzzle,\n    public readonly patternData: KPatternData,\n  ) {}\n\n  toJSON(): any {\n    return {\n      experimentalPuzzleName: this.kpuzzle.name(),\n      patternData: this.patternData,\n    };\n  }\n\n  static fromTransformation(transformation: KTransformation): KPattern {\n    const newPatternData = applyTransformationDataToKPatternData(\n      transformation.kpuzzle.definition,\n      transformation.kpuzzle.definition.defaultPattern,\n      transformation.transformationData,\n    );\n    return new KPattern(transformation.kpuzzle, newPatternData);\n  }\n\n  // Convenience function\n  /** @deprecated */\n  apply(source: KTransformationSource): KPattern {\n    return this.applyTransformation(this.kpuzzle.toTransformation(source));\n  }\n\n  applyTransformation(transformation: KTransformation): KPattern {\n    if (transformation.isIdentityTransformation()) {\n      return new KPattern(this.kpuzzle, this.patternData);\n    }\n    const newPatternData = applyTransformationDataToKPatternData(\n      this.kpuzzle.definition,\n      this.patternData,\n      transformation.transformationData,\n    );\n    return new KPattern(this.kpuzzle, newPatternData);\n  }\n\n  applyMove(move: Move | string): KPattern {\n    return this.applyTransformation(this.kpuzzle.moveToTransformation(move));\n  }\n\n  applyAlg(alg: Alg | string): KPattern {\n    return this.applyTransformation(this.kpuzzle.algToTransformation(alg));\n  }\n\n  isIdentical(other: KPattern): boolean {\n    return isPatternDataIdentical(\n      this.kpuzzle,\n      this.patternData,\n      other.patternData,\n    );\n  }\n\n  /** @deprecated */\n  experimentalToTransformation(): KTransformation | null {\n    if (!this.kpuzzle.canConvertDefaultPatternToUniqueTransformation()) {\n      return null;\n    }\n    const transformationData: KTransformationData = {};\n    for (const [orbitName, patternOrbitData] of Object.entries(\n      this.patternData,\n    )) {\n      const transformationOrbit: KTransformationOrbitData = {\n        permutation: patternOrbitData.pieces,\n        orientationDelta: patternOrbitData.orientation,\n      };\n      transformationData[orbitName] = transformationOrbit;\n    }\n    return new KTransformation(this.kpuzzle, transformationData);\n  }\n\n  experimentalIsSolved(options: {\n    ignorePuzzleOrientation: boolean;\n    // Note: `ignoreCenterOrientation` must currently be specified even if the puzzle does not have centers with indistinguishable orientations (in which case the value will be ignored).\n    ignoreCenterOrientation: boolean;\n  }): boolean {\n    if (!this.kpuzzle.definition.experimentalIsPatternSolved) {\n      throw new Error(\n        \"`KPattern.experimentalIsPatternSolved()` is not supported for this puzzle at the moment.\",\n      );\n    }\n    return this.kpuzzle.definition.experimentalIsPatternSolved(this, options);\n  }\n}\n", "import type { Alg, Move } from \"../alg\";\nimport {\n  invertTransformation,\n  isTransformationDataIdentical,\n  repeatTransformationUncached,\n  transformationRepetitionOrder,\n} from \"./calculate\";\nimport { combineTransformationData } from \"./combine\";\nimport { constructIdentityTransformationDataUncached } from \"./construct\";\nimport type { KPuzzle, KTransformationSource } from \"./KPuzzle\";\nimport type { KTransformationData } from \"./KPuzzleDefinition\";\nimport { KPattern } from \"./KPattern\";\n\nexport class KTransformation {\n  constructor(\n    public readonly kpuzzle: KPuzzle,\n    public readonly transformationData: KTransformationData,\n  ) {}\n\n  toJSON(): any {\n    return {\n      experimentalPuzzleName: this.kpuzzle.name(),\n      transformationData: this.transformationData,\n    };\n  }\n\n  invert(): KTransformation {\n    return new KTransformation(\n      this.kpuzzle,\n      invertTransformation(this.kpuzzle, this.transformationData),\n    );\n  }\n\n  // For optimizations, we want to make it cheap to rely on optimizations when a\n  // transformation is an identity. Here, we try to make it cheaper by:\n  // - only calculating when needed, and\n  // - caching the result.\n  #cachedIsIdentity: boolean | undefined; // TODO: is `null` worse here?\n  isIdentityTransformation(): boolean {\n    return (this.#cachedIsIdentity ??= this.isIdentical(\n      this.kpuzzle.identityTransformation(),\n    ));\n  }\n\n  /** @deprecated */\n  static experimentalConstructIdentity(kpuzzle: KPuzzle) {\n    const transformation = new KTransformation(\n      kpuzzle,\n      constructIdentityTransformationDataUncached(kpuzzle.definition),\n    );\n    transformation.#cachedIsIdentity = true;\n    return transformation;\n  }\n\n  isIdentical(t2: KTransformation): boolean {\n    return isTransformationDataIdentical(\n      this.kpuzzle,\n      this.transformationData,\n      t2.transformationData,\n    );\n  }\n\n  // Convenience function\n  /** @deprecated */\n  apply(source: KTransformationSource): KTransformation {\n    return this.applyTransformation(this.kpuzzle.toTransformation(source));\n  }\n\n  applyTransformation(t2: KTransformation): KTransformation {\n    if (this.kpuzzle !== t2.kpuzzle) {\n      throw new Error(\n        `Tried to apply a transformation for a KPuzzle (${t2.kpuzzle.name()}) to a different KPuzzle (${this.kpuzzle.name()}).`,\n      );\n    }\n\n    if (this.#cachedIsIdentity) {\n      return new KTransformation(this.kpuzzle, t2.transformationData);\n    }\n    if (t2.#cachedIsIdentity) {\n      return new KTransformation(this.kpuzzle, this.transformationData);\n    }\n\n    return new KTransformation(\n      this.kpuzzle,\n      combineTransformationData(\n        this.kpuzzle.definition,\n        this.transformationData,\n        t2.transformationData,\n      ),\n    );\n  }\n\n  applyMove(move: Move | string): KTransformation {\n    return this.applyTransformation(this.kpuzzle.moveToTransformation(move));\n  }\n\n  applyAlg(alg: Alg | string): KTransformation {\n    return this.applyTransformation(this.kpuzzle.algToTransformation(alg));\n  }\n\n  // Convenience. Useful for chaining.\n  toKPattern(): KPattern {\n    return KPattern.fromTransformation(this);\n  }\n\n  // TODO: support calculating this for a given start state. (For `R U R' U` on 3x3x3, should this default to 5 or 10?)\n  repetitionOrder(): number {\n    return transformationRepetitionOrder(this.kpuzzle.definition, this);\n  }\n\n  selfMultiply(amount: number): KTransformation {\n    return new KTransformation(\n      this.kpuzzle,\n      repeatTransformationUncached(\n        this.kpuzzle,\n        this.transformationData,\n        amount,\n      ),\n    );\n  }\n}\n", "import {\n  functionFromTraversal,\n  TraversalDownUp,\n  type Alg,\n  type Commutator,\n  type Conjugate,\n  type Grouping,\n  type LineComment,\n  type Move,\n  type Newline,\n  type Pause,\n} from \"../alg\";\nimport { combineTransformationData } from \"./combine\";\nimport type { KPuzzle } from \"./KPuzzle\";\nimport type {\n  KPatternData,\n  KPatternOrbitData,\n  KPuzzleDefinition,\n  KPuzzleOrbitDefinition,\n  KTransformationData,\n  KTransformationOrbitData,\n} from \"./KPuzzleDefinition\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport function isOrbitTransformationDataIdentityUncached(\n  numOrientations: number,\n  orbitTransformationData: KTransformationOrbitData,\n): boolean {\n  // TODO\n  // if (o === lasto) {\n  //   return true;\n  // }\n  if (!orbitTransformationData.permutation) {\n    console.log(orbitTransformationData);\n  }\n  const { permutation } = orbitTransformationData;\n  const numPieces = permutation.length;\n  for (let idx = 0; idx < numPieces; idx++) {\n    if (permutation[idx] !== idx) {\n      return false;\n    }\n  }\n  if (numOrientations > 1) {\n    const { orientationDelta: orientation } = orbitTransformationData;\n    for (let idx = 0; idx < numPieces; idx++) {\n      if (orientation[idx] !== 0) {\n        return false;\n      }\n    }\n  }\n  // lasto = o; // TODO\n  return true;\n}\n\nexport function isOrbitTransformationDataIdentical(\n  orbitDefinition: KPuzzleOrbitDefinition,\n  orbitTransformationData1: KTransformationOrbitData,\n  orbitTransformationData2: KTransformationOrbitData,\n  options: {\n    ignorePieceOrientations?: boolean;\n    ignorePiecePermutation?: boolean;\n  } = {},\n): boolean {\n  for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n    if (\n      !options?.ignorePieceOrientations &&\n      orbitTransformationData1.orientationDelta[idx] !==\n        orbitTransformationData2.orientationDelta[idx]\n    ) {\n      return false;\n    }\n    if (\n      !options?.ignorePiecePermutation &&\n      orbitTransformationData1.permutation[idx] !==\n        orbitTransformationData2.permutation[idx]\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransformationDataIdentical(\n  kpuzzle: KPuzzle,\n  transformationData1: KTransformationData,\n  transformationData2: KTransformationData,\n): boolean {\n  for (const orbitDefinition of kpuzzle.definition.orbits) {\n    if (\n      !isOrbitTransformationDataIdentical(\n        orbitDefinition,\n        transformationData1[orbitDefinition.orbitName],\n        transformationData2[orbitDefinition.orbitName],\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isOrbitPatternDataIdentical(\n  orbitDefinition: KPuzzleOrbitDefinition,\n  orbitPatternData1: KPatternOrbitData,\n  orbitPatternData2: KPatternOrbitData,\n  options: {\n    ignorePieceOrientations?: boolean;\n    ignorePieceIndices?: boolean;\n  } = {},\n): boolean {\n  for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n    if (\n      !options?.ignorePieceOrientations &&\n      (orbitPatternData1.orientation[idx] !==\n        orbitPatternData2.orientation[idx] ||\n        (orbitPatternData1.orientationMod?.[idx] ?? 0) !==\n          (orbitPatternData2.orientationMod?.[idx] ?? 0))\n    ) {\n      return false;\n    }\n    if (\n      !options?.ignorePieceIndices &&\n      orbitPatternData1.pieces[idx] !== orbitPatternData2.pieces[idx]\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isPatternDataIdentical(\n  kpuzzle: KPuzzle,\n  patternData1: KPatternData,\n  patternData2: KPatternData,\n): boolean {\n  for (const orbitDefinition of kpuzzle.definition.orbits) {\n    if (\n      !isOrbitPatternDataIdentical(\n        orbitDefinition,\n        patternData1[orbitDefinition.orbitName],\n        patternData2[orbitDefinition.orbitName],\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function invertTransformation(\n  kpuzzle: KPuzzle,\n  transformationData: KTransformationData,\n): KTransformationData {\n  const newTransformationData: KTransformationData = {};\n  for (const orbitDefinition of kpuzzle.definition.orbits) {\n    const orbitTransformationData =\n      transformationData[orbitDefinition.orbitName];\n    if (\n      isOrbitTransformationDataIdentityUncached(\n        orbitDefinition.numOrientations,\n        orbitTransformationData,\n      )\n    ) {\n      newTransformationData[orbitDefinition.orbitName] =\n        orbitTransformationData;\n    } else if (orbitDefinition.numOrientations === 1) {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        newPerm[orbitTransformationData.permutation[idx]] = idx;\n      }\n      newTransformationData[orbitDefinition.orbitName] = {\n        permutation: newPerm,\n        orientationDelta: orbitTransformationData.orientationDelta,\n      };\n    } else {\n      const newPerm = new Array(orbitDefinition.numPieces);\n      const newOri = new Array(orbitDefinition.numPieces);\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        const fromIdx = orbitTransformationData.permutation[idx];\n        newPerm[fromIdx] = idx;\n        newOri[fromIdx] =\n          (orbitDefinition.numOrientations -\n            orbitTransformationData.orientationDelta[idx] +\n            orbitDefinition.numOrientations) %\n          orbitDefinition.numOrientations;\n      }\n      newTransformationData[orbitDefinition.orbitName] = {\n        permutation: newPerm,\n        orientationDelta: newOri,\n      };\n    }\n  }\n  return newTransformationData;\n}\n\nexport function repeatTransformationUncached(\n  kpuzzle: KPuzzle,\n  transformationData: KTransformationData,\n  amount: number,\n): KTransformationData {\n  // This is used for move construction, so we optimize for the quantum move case.\n  if (amount === 1) {\n    return transformationData;\n  }\n  if (amount < 0) {\n    return repeatTransformationUncached(\n      kpuzzle,\n      invertTransformation(kpuzzle, transformationData),\n      -amount,\n    );\n  }\n  if (amount === 0) {\n    // TODO\n    const { transformationData } = kpuzzle.identityTransformation();\n    return transformationData;\n  }\n  let halfish = transformationData;\n  if (amount !== 2) {\n    halfish = repeatTransformationUncached(\n      kpuzzle,\n      transformationData,\n      Math.floor(amount / 2),\n    );\n  }\n  const twiceHalfish = combineTransformationData(\n    kpuzzle.definition,\n    halfish,\n    halfish,\n  );\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return combineTransformationData(\n      kpuzzle.definition,\n      transformationData,\n      twiceHalfish,\n    );\n  }\n}\n\nclass AlgToTransformationTraversal extends TraversalDownUp<\n  KPuzzle,\n  KTransformation\n> {\n  traverseAlg(alg: Alg, kpuzzle: KPuzzle): KTransformation {\n    let transformation: KTransformation | null = null;\n    for (const algNode of alg.childAlgNodes()) {\n      if (transformation) {\n        transformation = transformation.applyTransformation(\n          this.traverseAlgNode(algNode, kpuzzle),\n        );\n      } else {\n        transformation = this.traverseAlgNode(algNode, kpuzzle);\n      }\n    }\n    return transformation ?? kpuzzle.identityTransformation();\n  }\n  traverseGrouping(grouping: Grouping, kpuzzle: KPuzzle): KTransformation {\n    const algTransformation = this.traverseAlg(grouping.alg, kpuzzle);\n    return new KTransformation(\n      kpuzzle,\n      repeatTransformationUncached(\n        kpuzzle,\n        algTransformation.transformationData,\n        grouping.amount,\n      ),\n    );\n  }\n  traverseMove(move: Move, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.moveToTransformation(move);\n  }\n  traverseCommutator(\n    commutator: Commutator,\n    kpuzzle: KPuzzle,\n  ): KTransformation {\n    const aTransformation = this.traverseAlg(commutator.A, kpuzzle);\n    const bTransformation = this.traverseAlg(commutator.B, kpuzzle);\n    return aTransformation\n      .applyTransformation(bTransformation)\n      .applyTransformation(aTransformation.invert())\n      .applyTransformation(bTransformation.invert());\n  }\n  traverseConjugate(conjugate: Conjugate, kpuzzle: KPuzzle): KTransformation {\n    const aTransformation = this.traverseAlg(conjugate.A, kpuzzle);\n    const bTransformation = this.traverseAlg(conjugate.B, kpuzzle);\n    return aTransformation\n      .applyTransformation(bTransformation)\n      .applyTransformation(aTransformation.invert());\n  }\n  traversePause(_: Pause, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n  traverseNewline(_: Newline, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n  traverseLineComment(_: LineComment, kpuzzle: KPuzzle): KTransformation {\n    return kpuzzle.identityTransformation();\n  }\n}\n\nexport const algToTransformation = functionFromTraversal(\n  AlgToTransformationTraversal,\n);\n\nexport function canConvertDefaultPatternToUniqueTransformationUncached(\n  definition: KPuzzleDefinition,\n): boolean {\n  for (const orbitDefinition of definition.orbits) {\n    const pieces = new Array(orbitDefinition.numPieces).fill(false);\n    for (const piece of this.definition.defaultPattern[\n      orbitDefinition.orbitName\n    ].pieces) {\n      pieces[piece] = true;\n    }\n    for (const piece of pieces) {\n      if (!piece) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction gcd(a: number, b: number): number {\n  if (b) {\n    return gcd(b, a % b);\n  }\n  return a;\n}\n\n/* calculate the order of a particular transformation. */\nexport function transformationRepetitionOrder(\n  definition: KPuzzleDefinition,\n  transformation: KTransformation,\n): number {\n  let order: number = 1;\n  for (const orbitDefinition of definition.orbits) {\n    const transformationOrbit =\n      transformation.transformationData[orbitDefinition.orbitName];\n    const orbitPieces = new Array(orbitDefinition.numPieces);\n    for (let startIdx = 0; startIdx < orbitDefinition.numPieces; startIdx++) {\n      if (!orbitPieces[startIdx]) {\n        let currentIdx = startIdx;\n        let orientationSum = 0;\n        let cycleLength = 0;\n        for (;;) {\n          orbitPieces[currentIdx] = true;\n          orientationSum =\n            orientationSum + transformationOrbit.orientationDelta[currentIdx];\n          cycleLength = cycleLength + 1;\n          currentIdx = transformationOrbit.permutation[currentIdx];\n          if (currentIdx === startIdx) {\n            break;\n          }\n        }\n        if (orientationSum !== 0) {\n          cycleLength =\n            (cycleLength * orbitDefinition.numOrientations) /\n            gcd(orbitDefinition.numOrientations, Math.abs(orientationSum));\n        }\n        order = (order * cycleLength) / gcd(order, cycleLength);\n      }\n    }\n  }\n  return order;\n}\n", "import { Alg, Move } from \"../alg\";\nimport type { PGNotation } from \"../puzzle-geometry/PuzzleGeometry\";\nimport { algToTransformation } from \"./calculate\";\nimport { moveToTransformationUncached } from \"./construct\";\nimport type {\n  KPuzzleDefinition,\n  KPuzzleOrbitDefinition,\n  KTransformationData,\n} from \"./KPuzzleDefinition\";\nimport { KPattern } from \"./KPattern\";\nimport { KTransformation } from \"./KTransformation\";\n\nexport type KTransformationSource = Alg | Move | string | KTransformation;\n\nexport class KPuzzle {\n  private experimentalPGNotation: PGNotation | undefined;\n  constructor(\n    public readonly definition: KPuzzleDefinition,\n    options?: {\n      experimentalPGNotation?: PGNotation;\n    },\n  ) {\n    this.experimentalPGNotation = options?.experimentalPGNotation;\n  }\n\n  #indexedOrbits: Record<string, KPuzzleOrbitDefinition> | undefined;\n  // Note: this function is needed much more rarely than you might think. Most\n  // operations related to orbits require iterating through all of them, for\n  // which the following is better:\n  //\n  //    for (const orbitDefinition of kpuzzle.definition.orbits) { // \u2026\n  //    }\n  lookupOrbitDefinition(orbitName: string): KPuzzleOrbitDefinition {\n    this.#indexedOrbits ||= (() => {\n      const indexedOrbits: Record<string, KPuzzleOrbitDefinition> = {};\n      for (const orbitDefinition of this.definition.orbits) {\n        indexedOrbits[orbitDefinition.orbitName] = orbitDefinition;\n      }\n      return indexedOrbits;\n    })();\n    return this.#indexedOrbits[orbitName];\n  }\n\n  name(): string {\n    return this.definition.name; // TODO\n  }\n\n  identityTransformation(): KTransformation {\n    return KTransformation.experimentalConstructIdentity(this);\n  }\n\n  #moveToTransformationDataCache = new Map<string, KTransformationData>();\n  moveToTransformation(move: Move | string): KTransformation {\n    if (typeof move === \"string\") {\n      move = new Move(move);\n    }\n    const cacheKey = move.toString();\n    const cachedTransformationData: KTransformationData | undefined =\n      this.#moveToTransformationDataCache.get(cacheKey);\n    if (cachedTransformationData) {\n      return new KTransformation(this, cachedTransformationData);\n    }\n\n    if (this.experimentalPGNotation) {\n      const transformationData = this.experimentalPGNotation.lookupMove(move);\n      if (!transformationData) {\n        throw new Error(`could not map to internal move: ${move}`);\n      }\n      this.#moveToTransformationDataCache.set(cacheKey, transformationData);\n      return new KTransformation(this, transformationData);\n    }\n\n    const transformationData = moveToTransformationUncached(this, move);\n    this.#moveToTransformationDataCache.set(cacheKey, transformationData);\n    return new KTransformation(this, transformationData);\n  }\n\n  algToTransformation(alg: Alg | string): KTransformation {\n    if (typeof alg === \"string\") {\n      alg = new Alg(alg);\n    }\n    return algToTransformation(alg, this);\n  }\n\n  /** @deprecated */\n  toTransformation(source: KTransformationSource): KTransformation {\n    if (typeof source === \"string\") {\n      return this.algToTransformation(source);\n    } else if ((source as Alg | null)?.is?.(Alg)) {\n      return this.algToTransformation(source as Alg);\n    } else if ((source as Move | null)?.is?.(Move)) {\n      return this.moveToTransformation(source as Move);\n    } else {\n      return source as KTransformation;\n    }\n  }\n\n  defaultPattern(): KPattern {\n    return new KPattern(this, this.definition.defaultPattern);\n  }\n\n  #cachedCanConvertDefaultPatternToUniqueTransformation: boolean | undefined;\n  // TODO: Handle incomplete default pattern data\n  canConvertDefaultPatternToUniqueTransformation(): boolean {\n    return (this.#cachedCanConvertDefaultPatternToUniqueTransformation ??=\n      ((): boolean => {\n        for (const orbitDefinition of this.definition.orbits) {\n          const pieces = new Array(orbitDefinition.numPieces).fill(false);\n          for (const piece of this.definition.defaultPattern[\n            orbitDefinition.orbitName\n          ].pieces) {\n            pieces[piece] = true;\n          }\n          for (const piece of pieces) {\n            if (!piece) {\n              return false;\n            }\n          }\n        }\n        return true;\n      })());\n  }\n}\n", "// @ts-nocheck\n\nexport class PLazy<T> extends Promise<T> {\n  constructor(executor) {\n    super((resolve) => {\n      resolve();\n    });\n\n    this._executor = executor;\n  }\n\n  static from(function_) {\n    return new PLazy((resolve) => {\n      resolve(function_());\n    });\n  }\n\n  static resolve(value) {\n    return new PLazy((resolve) => {\n      resolve(value);\n    });\n  }\n\n  static reject(error) {\n    return new PLazy((_resolve, reject) => {\n      reject(error);\n    });\n  }\n\n  // biome-ignore lint/suspicious/noThenProperty: This is implementing the `Promise` API.\n  then(onFulfilled, onRejected) {\n    this._promise = this._promise || new Promise(this._executor);\n\n    return this._promise.then(onFulfilled, onRejected);\n  }\n\n  catch(onRejected) {\n    this._promise = this._promise || new Promise(this._executor);\n\n    return this._promise.catch(onRejected);\n  }\n}\n\nexport function from<T>(function_): Promise<T> {\n  return new PLazy((resolve) => {\n    resolve(function_());\n  });\n}\n", "// TODO: figure out where to house this permanently.\n\nimport type { Move } from \"../../alg\";\nimport type { KPuzzle } from \"../../kpuzzle\";\n\nexport type FaceletMeshStickeringMask =\n  | \"regular\"\n  | \"dim\"\n  | \"oriented\"\n  | \"experimentalOriented2\" // TODO\n  | \"ignored\"\n  | \"invisible\"\n  | \"mystery\";\n\nexport type FaceletStickeringMask = {\n  mask: FaceletMeshStickeringMask;\n  hintMask?: FaceletMeshStickeringMask;\n};\n\nexport type PieceStickeringMask = {\n  // TODO: foundation?\n  facelets: (FaceletMeshStickeringMask | FaceletStickeringMask | null)[];\n};\n\nexport type OrbitStickeringMask = {\n  pieces: (PieceStickeringMask | null)[];\n};\n\nexport type StickeringMask = {\n  specialBehaviour?: \"picture\"; // TODO: remove this\n  name?: string; // TODO\n  orbits: Record<string, OrbitStickeringMask>;\n};\n\nexport function getFaceletStickeringMask(\n  stickeringMask: StickeringMask,\n  orbitName: string,\n  pieceIdx: number,\n  faceletIdx: number,\n  hint: boolean,\n): FaceletMeshStickeringMask {\n  const orbitStickeringMask = stickeringMask.orbits[orbitName];\n  const pieceStickeringMask: PieceStickeringMask | null =\n    orbitStickeringMask.pieces[pieceIdx];\n  if (pieceStickeringMask === null) {\n    return regular;\n  }\n  const faceletStickeringMask:\n    | FaceletMeshStickeringMask\n    | FaceletStickeringMask\n    | null = pieceStickeringMask.facelets?.[faceletIdx];\n  if (faceletStickeringMask === null) {\n    return regular;\n  }\n  if (typeof faceletStickeringMask === \"string\") {\n    return faceletStickeringMask;\n  }\n  if (hint) {\n    return faceletStickeringMask.hintMask ?? faceletStickeringMask.mask;\n  }\n  console.log(faceletStickeringMask);\n  return faceletStickeringMask.mask;\n}\n\n// TODO: Revert this to a normal enum, or write a standard to codify the names?\nexport enum PieceStickering {\n  Regular = \"Regular\",\n  Dim = \"Dim\",\n  Ignored = \"Ignored\",\n  OrientationStickers = \"OrientationStickers\",\n  Invisible = \"Invisible\",\n  Ignoriented = \"Ignoriented\",\n  IgnoreNonPrimary = \"IgnoreNonPrimary\",\n  PermuteNonPrimary = \"PermuteNonPrimary\",\n  OrientationWithoutPermutation = \"OrientationWithoutPermutation\",\n  ExperimentalOrientationWithoutPermutation2 = \"ExperimentalOrientationWithoutPermutation2\", // TODO\n  Mystery = \"Mystery\", // TODO\n}\n\nexport class PieceAnnotation<T> {\n  stickerings: Map<string, T[]> = new Map();\n  constructor(kpuzzle: KPuzzle, defaultValue: T) {\n    for (const orbitDefinition of kpuzzle.definition.orbits) {\n      this.stickerings.set(\n        orbitDefinition.orbitName,\n        new Array(orbitDefinition.numPieces).fill(defaultValue),\n      );\n    }\n  }\n}\n\nconst regular = \"regular\";\nconst ignored = \"ignored\";\nconst oriented = \"oriented\";\nconst experimentalOriented2 = \"experimentalOriented2\";\nconst invisible = \"invisible\";\nconst dim = \"dim\";\nconst mystery = \"mystery\";\n\n// We specify 5 facelets, because that's the maximum we need for any built-in puzzles (e.g. Megaminx centers or icosa vertices).\n// TODO: use \"primary\" and \"non-primary\" fields instead of listing all non-primary facelets.\nconst pieceStickerings: Record<string, PieceStickeringMask> = {\n  // regular\n  [PieceStickering.Regular]: {\n    // r\n    facelets: [regular, regular, regular, regular, regular],\n  },\n\n  // ignored\n  [PieceStickering.Ignored]: {\n    // i\n    facelets: [ignored, ignored, ignored, ignored, ignored],\n  },\n\n  // oriented stickers\n  [PieceStickering.OrientationStickers]: {\n    // o\n    facelets: [oriented, oriented, oriented, oriented, oriented],\n  },\n\n  // \"OLL\"\n  [PieceStickering.IgnoreNonPrimary]: {\n    // riiii\n    facelets: [regular, ignored, ignored, ignored, ignored],\n  },\n\n  // invisible\n  [PieceStickering.Invisible]: {\n    // invisiblePiece\n    facelets: [invisible, invisible, invisible, invisible, invisible],\n  },\n\n  // \"PLL\"\n  [PieceStickering.PermuteNonPrimary]: {\n    // drrrr\n    facelets: [dim, regular, regular, regular, regular],\n  },\n\n  // ignored\n  [PieceStickering.Dim]: {\n    // d\n    facelets: [dim, dim, dim, dim, dim],\n  },\n\n  // \"OLL\"\n  [PieceStickering.Ignoriented]: {\n    // diiii\n    facelets: [dim, ignored, ignored, ignored, ignored],\n  },\n  [PieceStickering.OrientationWithoutPermutation]: {\n    // oiiii\n    facelets: [oriented, ignored, ignored, ignored, ignored],\n  },\n  [PieceStickering.ExperimentalOrientationWithoutPermutation2]: {\n    // oiiii\n    facelets: [experimentalOriented2, ignored, ignored, ignored, ignored],\n  },\n  [PieceStickering.Mystery]: {\n    // oiiii\n    facelets: [mystery, mystery, mystery, mystery, mystery],\n  },\n};\n\nexport function getPieceStickeringMask(\n  pieceStickering: PieceStickering,\n): PieceStickeringMask {\n  return pieceStickerings[pieceStickering];\n}\n\nexport class PuzzleStickering extends PieceAnnotation<PieceStickering> {\n  constructor(kpuzzle: KPuzzle) {\n    super(kpuzzle, PieceStickering.Regular);\n  }\n\n  set(pieceSet: PieceSet, pieceStickering: PieceStickering): PuzzleStickering {\n    for (const [orbitName, pieces] of this.stickerings.entries()) {\n      for (let i = 0; i < pieces.length; i++) {\n        if (pieceSet.stickerings.get(orbitName)![i]) {\n          pieces[i] = pieceStickering;\n        }\n      }\n    }\n    return this;\n  }\n\n  toStickeringMask(): StickeringMask {\n    const stickeringMask: StickeringMask = { orbits: {} };\n    for (const [orbitName, pieceStickerings] of this.stickerings.entries()) {\n      const pieces: PieceStickeringMask[] = [];\n      const orbitStickeringMask: OrbitStickeringMask = {\n        pieces,\n      };\n      stickeringMask.orbits[orbitName] = orbitStickeringMask;\n      for (const pieceStickering of pieceStickerings) {\n        pieces.push(getPieceStickeringMask(pieceStickering));\n      }\n    }\n    return stickeringMask;\n  }\n}\n\nexport type PieceSet = PieceAnnotation<boolean>;\n\nexport class StickeringManager {\n  constructor(private kpuzzle: KPuzzle) {}\n\n  and(pieceSets: PieceSet[]): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n      pieceLoop: for (let i = 0; i < orbitDefinition.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] = true;\n        for (const pieceSet of pieceSets) {\n          if (!pieceSet.stickerings.get(orbitDefinition.orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] = false;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  or(pieceSets: PieceSet[]): PieceSet {\n    // TODO: unify impl with and?\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n      pieceLoop: for (let i = 0; i < orbitDefinition.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] = false;\n        for (const pieceSet of pieceSets) {\n          if (pieceSet.stickerings.get(orbitDefinition.orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] = true;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  not(pieceSet: PieceSet): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n      for (let i = 0; i < orbitDefinition.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] =\n          !pieceSet.stickerings.get(orbitDefinition.orbitName)![i];\n      }\n    }\n    return newPieceSet;\n  }\n\n  all(): PieceSet {\n    return this.and(this.moves([])); // TODO: are the degenerate cases for and/or the wrong way around\n  }\n\n  move(moveSource: Move | string): PieceSet {\n    const transformation = this.kpuzzle.moveToTransformation(moveSource);\n    const newPieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n      for (let i = 0; i < orbitDefinition.numPieces; i++) {\n        if (\n          transformation.transformationData[orbitDefinition.orbitName]\n            .permutation[i] !== i ||\n          transformation.transformationData[orbitDefinition.orbitName]\n            .orientationDelta[i] !== 0\n        ) {\n          newPieceSet.stickerings.get(orbitDefinition.orbitName)![i] = true;\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  moves(moveSources: (Move | string)[]): PieceSet[] {\n    return moveSources.map((moveSource) => this.move(moveSource));\n  }\n\n  orbits(orbitNames: string[]): PieceSet {\n    const pieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitName of orbitNames) {\n      pieceSet.stickerings.get(orbitName)!.fill(true);\n    }\n    return pieceSet;\n  }\n\n  orbitPrefix(orbitPrefix: string): PieceSet {\n    const pieceSet = new PieceAnnotation<boolean>(this.kpuzzle, false);\n    for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n      if (orbitDefinition.orbitName.startsWith(orbitPrefix)) {\n        pieceSet.stickerings.get(orbitDefinition.orbitName)!.fill(true);\n      }\n    }\n    return pieceSet;\n  }\n  // trueCounts(pieceSet: PieceSet): Record<string, number> {\n  //   const counts: Record<string, number> = {};\n  //   for (const orbitDefinition of this.def.orbits) {\n  //     let count = 0;\n  //     for (let i = 0; i < orbitDefinition.numPieces; i++) {\n  //       if (pieceSet.stickerings.get(orbitDefinition.orbitName)![i]) {\n  //         count++;\n  //       }\n  //     }\n  //     counts[orbitName] = count;\n  //   }\n  //   return counts;\n  // }\n}\n", "import type { PuzzleID } from \"../../twisty\";\n\nconst LL = \"Last Layer\";\nconst LS = \"Last Slot\";\nconst megaAnd3x3x3LL = {\n  \"3x3x3\": LL,\n  megaminx: LL,\n};\nconst megaAnd3x3x3LS = {\n  \"3x3x3\": LS,\n  megaminx: LS,\n};\n\nexport const experimentalStickerings: Record<\n  string,\n  { groups?: Partial<Record<PuzzleID, string>> }\n> = {\n  full: { groups: { \"3x3x3\": \"Stickering\", megaminx: \"Stickering\" } }, // default\n  OLL: { groups: megaAnd3x3x3LL },\n  PLL: { groups: megaAnd3x3x3LL },\n  LL: { groups: megaAnd3x3x3LL },\n  EOLL: { groups: megaAnd3x3x3LL },\n  COLL: { groups: megaAnd3x3x3LL },\n  OCLL: { groups: megaAnd3x3x3LL },\n  CPLL: { groups: megaAnd3x3x3LL },\n  CLL: { groups: megaAnd3x3x3LL },\n  EPLL: { groups: megaAnd3x3x3LL },\n  ELL: { groups: megaAnd3x3x3LL },\n  ZBLL: { groups: megaAnd3x3x3LL },\n  LS: { groups: megaAnd3x3x3LS },\n  LSOLL: { groups: megaAnd3x3x3LS },\n  LSOCLL: { groups: megaAnd3x3x3LS },\n  ELS: { groups: megaAnd3x3x3LS },\n  CLS: { groups: megaAnd3x3x3LS },\n  ZBLS: { groups: megaAnd3x3x3LS },\n  VLS: { groups: megaAnd3x3x3LS },\n  WVLS: { groups: megaAnd3x3x3LS },\n  F2L: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  Daisy: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  Cross: { groups: { \"3x3x3\": \"CFOP (Fridrich)\" } },\n  EO: { groups: { \"3x3x3\": \"ZZ\" } },\n  EOline: { groups: { \"3x3x3\": \"ZZ\" } },\n  EOcross: { groups: { \"3x3x3\": \"ZZ\" } },\n  FirstBlock: { groups: { \"3x3x3\": \"Roux\" } },\n  SecondBlock: { groups: { \"3x3x3\": \"Roux\" } },\n  CMLL: { groups: { \"3x3x3\": \"Roux\" } },\n  L10P: { groups: { \"3x3x3\": \"Roux\" } },\n  L6E: { groups: { \"3x3x3\": \"Roux\" } },\n  L6EO: { groups: { \"3x3x3\": \"Roux\" } },\n  \"2x2x2\": { groups: { \"3x3x3\": \"Petrus\" } },\n  \"2x2x3\": { groups: { \"3x3x3\": \"Petrus\" } },\n  EODF: { groups: { \"3x3x3\": \"Nautilus\" } },\n  G1: { groups: { \"3x3x3\": \"FMC\" } },\n  L2C: {\n    groups: {\n      \"4x4x4\": \"Reduction\",\n      \"5x5x5\": \"Reduction\",\n      \"6x6x6\": \"Reduction\",\n    },\n  },\n  PBL: {\n    groups: {\n      \"2x2x2\": \"Ortega\",\n    },\n  },\n  \"Void Cube\": { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  invisible: { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  picture: { groups: { \"3x3x3\": \"Miscellaneous\" } },\n  \"centers-only\": { groups: { \"3x3x3\": \"Miscellaneous\" } }, // TODO\n  \"opposite-centers\": { groups: { \"4x4x4\": \"Reduction\" } }, // TODO\n  \"experimental-centers-U\": {},\n  \"experimental-centers-U-D\": {},\n  \"experimental-centers-U-L-D\": {},\n  \"experimental-centers-U-L-B-D\": {},\n  \"experimental-centers\": {},\n  \"experimental-fto-fc\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-f2t\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-sc\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-l2c\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-lbt\": { groups: { fto: \"Bencisco\" } },\n  \"experimental-fto-l3t\": { groups: { fto: \"Bencisco\" } },\n};\n", "import type { ExperimentalStickering, PuzzleID } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  type PieceSet,\n  PieceStickering,\n  PuzzleStickering,\n  StickeringManager,\n  type StickeringMask,\n} from \"./mask\";\nimport { experimentalStickerings } from \"./puzzle-stickerings\";\n\nexport async function cubeLikeStickeringMask(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  return (\n    await cubeLikePuzzleStickering(puzzleLoader, stickering)\n  ).toStickeringMask();\n}\n\n// TODO: cache calculations?\nexport async function cubeLikePuzzleStickering(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<PuzzleStickering> {\n  const kpuzzle = await puzzleLoader.kpuzzle();\n  const puzzleStickering = new PuzzleStickering(kpuzzle);\n  const m = new StickeringManager(kpuzzle);\n\n  const LL = (): PieceSet => m.move(\"U\");\n  const orUD = (): PieceSet => m.or(m.moves([\"U\", \"D\"]));\n  const orLR = (): PieceSet => m.or(m.moves([\"L\", \"R\"]));\n  const M = (): PieceSet => m.not(orLR());\n\n  const F2L = (): PieceSet => m.not(LL());\n\n  const CENTERS = (): PieceSet => m.orbitPrefix(\"CENTER\");\n  const CENTER = (faceMove: string): PieceSet =>\n    m.and([m.move(faceMove), CENTERS()]);\n  const EDGES = (): PieceSet => m.orbitPrefix(\"EDGE\");\n  const EDGE = (faceMoves: string[]): PieceSet =>\n    m.and([m.and(m.moves(faceMoves)), EDGES()]);\n  const CORNERS = (): PieceSet =>\n    m.or([\n      m.orbitPrefix(\"CORNER\"),\n      m.orbitPrefix(\"C4RNER\"),\n      m.orbitPrefix(\"C5RNER\"),\n    ]);\n\n  const L6E = (): PieceSet => m.or([M(), m.and([LL(), EDGES()])]);\n  const centerLL = (): PieceSet => m.and([LL(), CENTERS()]);\n\n  const edgeFR = (): PieceSet => m.and([m.and(m.moves([\"F\", \"R\"])), EDGES()]);\n  // Handles Megaminx\n  const cornerDFR = (): PieceSet =>\n    m.and([m.and(m.moves([\"F\", \"R\"])), CORNERS(), m.not(LL())]);\n  const slotFR = (): PieceSet => m.or([cornerDFR(), edgeFR()]);\n\n  function dimF2L(): void {\n    puzzleStickering.set(F2L(), PieceStickering.Dim);\n  }\n\n  function setPLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n    puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n  }\n\n  function setOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.IgnoreNonPrimary);\n    puzzleStickering.set(centerLL(), PieceStickering.Regular); // For PG\n  }\n\n  function dimOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n    puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n  }\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"PLL\": {\n      dimF2L();\n      setPLL();\n      break;\n    }\n    case \"CLS\": {\n      dimF2L();\n      puzzleStickering.set(cornerDFR(), PieceStickering.Regular);\n      puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"OLL\": {\n      dimF2L();\n      setOLL();\n      break;\n    }\n    case \"EOLL\": {\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      break;\n    }\n    case \"COLL\": {\n      dimF2L();\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"OCLL\": {\n      dimF2L();\n      dimOLL();\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"CPLL\": {\n      dimF2L();\n      puzzleStickering.set(\n        m.and([CORNERS(), LL()]),\n        PieceStickering.PermuteNonPrimary,\n      );\n      puzzleStickering.set(\n        m.and([m.not(CORNERS()), LL()]),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"CLL\": {\n      dimF2L();\n      puzzleStickering.set(\n        m.not(m.and([CORNERS(), LL()])),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"EPLL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), EDGES()]),\n        PieceStickering.PermuteNonPrimary,\n      );\n      break;\n    }\n    case \"ELL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.Dim);\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Regular);\n      break;\n    }\n    case \"ELS\": {\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      puzzleStickering.set(edgeFR(), PieceStickering.Regular);\n      puzzleStickering.set(cornerDFR(), PieceStickering.Ignored);\n      break;\n    }\n    case \"LL\": {\n      dimF2L();\n      break;\n    }\n    case \"F2L\": {\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      break;\n    }\n    case \"ZBLL\": {\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n      puzzleStickering.set(centerLL(), PieceStickering.Dim); // For PG\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"ZBLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      break;\n    }\n    case \"VLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      break;\n    }\n    case \"WVLS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Ignoriented);\n      puzzleStickering.set(m.and([LL(), CENTERS()]), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"LS\": {\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      puzzleStickering.set(centerLL(), PieceStickering.Dim);\n      break;\n    }\n    case \"LSOLL\": {\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      break;\n    }\n    case \"LSOCLL\": {\n      dimF2L();\n      dimOLL();\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      break;\n    }\n    case \"EO\": {\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      break;\n    }\n    case \"EOline\": {\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(m.and(m.moves([\"D\", \"M\"])), PieceStickering.Regular);\n      break;\n    }\n    case \"EOcross\": {\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(m.move(\"D\"), PieceStickering.Regular);\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      break;\n    }\n    case \"CMLL\": {\n      puzzleStickering.set(F2L(), PieceStickering.Dim);\n      puzzleStickering.set(L6E(), PieceStickering.Ignored);\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    }\n    case \"L10P\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      puzzleStickering.set(m.and([CORNERS(), LL()]), PieceStickering.Regular);\n      break;\n    }\n    case \"L6E\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      break;\n    }\n    case \"L6EO\": {\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      puzzleStickering.set(\n        L6E(),\n        PieceStickering.ExperimentalOrientationWithoutPermutation2,\n      );\n      puzzleStickering.set(\n        m.and([CENTERS(), orUD()]),\n        PieceStickering.ExperimentalOrientationWithoutPermutation2,\n      ); // For PG\n      puzzleStickering.set(\n        m.and([m.move(\"M\"), m.move(\"E\")]),\n        PieceStickering.Ignored,\n      );\n      break;\n    }\n    case \"Daisy\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"U\"), EDGES()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    }\n    case \"Cross\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), EDGES()]),\n        PieceStickering.Regular,\n      );\n      break;\n    }\n    case \"2x2x2\": {\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      break;\n    }\n    case \"2x2x3\": {\n      puzzleStickering.set(m.all(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"R\"])))]),\n        PieceStickering.Regular,\n      );\n      break;\n    }\n    case \"G1\": {\n      puzzleStickering.set(\n        m.all(),\n        PieceStickering.ExperimentalOrientationWithoutPermutation2,\n      );\n      puzzleStickering.set(\n        m.or(m.moves([\"E\"])),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(m.and(m.moves([\"E\", \"S\"])), PieceStickering.Ignored);\n      break;\n    }\n    case \"L2C\": {\n      puzzleStickering.set(\n        m.or(m.moves([\"L\", \"R\", \"B\", \"D\"])),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(m.not(CENTERS()), PieceStickering.Ignored);\n      break;\n    }\n    case \"PBL\": {\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"D\"])),\n        PieceStickering.PermuteNonPrimary,\n      );\n      break;\n    }\n    case \"FirstBlock\": {\n      puzzleStickering.set(\n        m.not(m.and([m.and(m.moves([\"L\"])), m.not(LL())])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(CENTER(\"R\"), PieceStickering.Dim);\n      break;\n    }\n    case \"SecondBlock\": {\n      puzzleStickering.set(\n        m.not(m.and([m.and(m.moves([\"L\"])), m.not(LL())])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.and(m.moves([\"L\"])), m.not(LL())]),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(\n        m.and([m.and(m.moves([\"R\"])), m.not(LL())]),\n        PieceStickering.Regular,\n      );\n      break;\n    }\n    case \"EODF\": {\n      dimF2L();\n      puzzleStickering.set(\n        m.or([cornerDFR(), m.and([LL(), CORNERS()])]),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.or([m.and([LL(), EDGES()]), edgeFR()]),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(EDGE([\"D\", \"F\"]), PieceStickering.Regular);\n      puzzleStickering.set(CENTER(\"F\"), PieceStickering.Regular);\n      break;\n    }\n    case \"Void Cube\": {\n      puzzleStickering.set(CENTERS(), PieceStickering.Invisible);\n      break;\n    }\n    case \"picture\":\n    // fallthrough\n    case \"invisible\": {\n      puzzleStickering.set(m.all(), PieceStickering.Invisible);\n      break;\n    }\n    case \"centers-only\": {\n      puzzleStickering.set(m.not(CENTERS()), PieceStickering.Ignored);\n      break;\n    }\n    case \"opposite-centers\": {\n      puzzleStickering.set(\n        m.not(m.and([CENTERS(), m.or(m.moves([\"U\", \"D\"]))])),\n        PieceStickering.Ignored,\n      );\n      break;\n    }\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering;\n}\n\nexport async function cubeLikeStickeringList(\n  puzzleID: PuzzleID,\n  options?: { use3x3x3Fallbacks: boolean },\n): Promise<ExperimentalStickering[]> {\n  const stickerings: ExperimentalStickering[] = [];\n  const stickeringsFallback: ExperimentalStickering[] = [];\n  for (const [name, info] of Object.entries(experimentalStickerings)) {\n    if (info.groups) {\n      if (puzzleID in info.groups) {\n        stickerings.push(name);\n      } else if (options?.use3x3x3Fallbacks && \"3x3x3\" in info.groups) {\n        stickeringsFallback.push(name);\n      }\n    }\n  }\n  return stickerings.concat(stickeringsFallback);\n}\n", "export function getCached<T>(getValue: () => Promise<T>): () => Promise<T> {\n  let cachedPromise: Promise<T> | null = null;\n  return (): Promise<T> => {\n    return (cachedPromise ??= getValue());\n  };\n}\n", "import {\n  Move,\n  type PuzzleSpecificSimplifyOptions,\n  type QuantumMove,\n} from \"../../alg\";\nimport { KPuzzle, type KPuzzleDefinition } from \"../../kpuzzle\";\nimport type { PuzzleGeometry } from \"../../puzzle-geometry\";\nimport type { ExperimentalStickering, PuzzleID } from \"../../twisty\";\nimport { PLazy } from \"../../vendor/mit/p-lazy/p-lazy\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"../stickerings/cube-like-stickerings\";\nimport type { StickeringMask } from \"../stickerings/mask\";\nimport { getCached } from \"./lazy-cached\";\n\n// TODO: modify this to handle TwistyPlayer options\nexport async function asyncGetPuzzleGeometry(\n  puzzleName: string,\n): Promise<PuzzleGeometry> {\n  const puzzleGeometry = await import(\"../../puzzle-geometry\");\n  return puzzleGeometry.getPuzzleGeometryByName(puzzleName, {\n    allMoves: true,\n    orientCenters: true,\n    addRotations: true,\n  });\n}\n\n// TODO: can we cache the puzzleGeometry to avoid duplicate calls, without\n// wasting memory? Maybe just save the latest one for successive calls about the\n// same puzzle?\nexport async function asyncGetKPuzzle(\n  pgPromise: Promise<PuzzleGeometry>,\n  puzzleName: string,\n  setOrientationModTo1ForPiecesOfOrbits?: string[], // TODO: make this unhacky\n): Promise<KPuzzle> {\n  const pg = await pgPromise;\n  const kpuzzleDefinition: KPuzzleDefinition = pg.getKPuzzleDefinition(true);\n  kpuzzleDefinition.name = puzzleName;\n  const puzzleGeometry = await import(\"../../puzzle-geometry\");\n  const pgNotation = new puzzleGeometry.ExperimentalPGNotation(\n    pg,\n    pg.getOrbitsDef(true),\n  );\n  if (setOrientationModTo1ForPiecesOfOrbits) {\n    const setOrientationModTo1ForPiecesOfOrbitsSet = new Set(\n      setOrientationModTo1ForPiecesOfOrbits,\n    );\n    for (const [orbitName, orbitData] of Object.entries(\n      kpuzzleDefinition.defaultPattern,\n    )) {\n      if (setOrientationModTo1ForPiecesOfOrbitsSet.has(orbitName)) {\n        orbitData.orientationMod = new Array(\n          orbitData.pieces.length, // TODO: get this from the orbit definition, especially once we allow empty entries.\n        ).fill(1);\n      }\n    }\n  }\n  return new KPuzzle(pgNotation.remapKPuzzleDefinition(kpuzzleDefinition), {\n    experimentalPGNotation: pgNotation,\n  });\n}\n\nexport function asyncLazyKPuzzleGetter(\n  pgPromise: Promise<PuzzleGeometry>,\n  puzzleName: string,\n): () => Promise<KPuzzle> {\n  return getCached(() => asyncGetKPuzzle(pgPromise, puzzleName));\n}\n\ntype PuzzleLoaderConstructorArgs = {\n  pgID?: string;\n  id: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number;\n  setOrientationModTo1ForPiecesOfOrbits?: string[];\n};\n\nexport class PGPuzzleLoader implements PuzzleLoader {\n  pgId?: string;\n  id: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number;\n  #setOrientationModTo1ForPiecesOfOrbits?: string[]; //  // TODO: make this unhacky\n  constructor(info: PuzzleLoaderConstructorArgs) {\n    this.pgId = info.pgID;\n    this.id = info.id;\n    this.fullName = info.fullName;\n    this.inventedBy = info.inventedBy;\n    this.inventionYear = info.inventionYear;\n    this.#setOrientationModTo1ForPiecesOfOrbits =\n      info.setOrientationModTo1ForPiecesOfOrbits;\n  }\n\n  #cachedPG: Promise<PuzzleGeometry> | undefined;\n  pg(): Promise<PuzzleGeometry> {\n    return (this.#cachedPG ??= asyncGetPuzzleGeometry(this.pgId ?? this.id));\n  }\n\n  #cachedKPuzzle: Promise<KPuzzle> | undefined;\n  kpuzzle(): Promise<KPuzzle> {\n    return (this.#cachedKPuzzle ??= asyncGetKPuzzle(\n      this.pg(),\n      this.id,\n      this.#setOrientationModTo1ForPiecesOfOrbits,\n    ));\n  }\n\n  #cachedSVG: Promise<string> | undefined;\n  svg(): Promise<string> {\n    return (this.#cachedSVG ??= (async () =>\n      (await this.pg()).generatesvg())());\n  }\n\n  puzzleSpecificSimplifyOptionsPromise = puzzleSpecificSimplifyOptionsPromise(\n    this.kpuzzle.bind(this),\n  );\n}\n\nexport class CubePGPuzzleLoader extends PGPuzzleLoader {\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return cubeLikeStickeringMask(this, stickering);\n  }\n  stickerings = () =>\n    cubeLikeStickeringList(this.id as PuzzleID, { use3x3x3Fallbacks: true });\n}\n\nexport function puzzleSpecificSimplifyOptionsPromise(\n  kpuzzlePromiseFn: () => Promise<KPuzzle>,\n): Promise<PuzzleSpecificSimplifyOptions> {\n  return new PLazy(\n    async (resolve: (options: PuzzleSpecificSimplifyOptions) => void) => {\n      const kpuzzle = await kpuzzlePromiseFn();\n      resolve({\n        quantumMoveOrder: (m: QuantumMove) => {\n          return kpuzzle.moveToTransformation(new Move(m)).repetitionOrder();\n        },\n      });\n    },\n  );\n}\n", "import type { KPuzzleDefinition } from \"../../../../kpuzzle\";\n\nexport const cube3x3x3KPuzzleDefinition: KPuzzleDefinition = {\n  name: \"3x3x3\",\n  orbits: [\n    { orbitName: \"EDGES\", numPieces: 12, numOrientations: 2 },\n    { orbitName: \"CORNERS\", numPieces: 8, numOrientations: 3 },\n    { orbitName: \"CENTERS\", numPieces: 6, numOrientations: 4 },\n  ],\n  defaultPattern: {\n    EDGES: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CENTERS: {\n      pieces: [0, 1, 2, 3, 4, 5],\n      orientation: [0, 0, 0, 0, 0, 0],\n      orientationMod: [1, 1, 1, 1, 1, 1],\n    },\n  },\n  moves: {\n    U: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    y: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientationDelta: [1, 0, 0, 0, 0, 3],\n      },\n    },\n    x: {\n      EDGES: {\n        permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3],\n        orientationDelta: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientationDelta: [2, 1, 2, 1, 1, 2, 1, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientationDelta: [0, 3, 0, 1, 2, 2],\n      },\n    },\n    L: {\n      EDGES: {\n        permutation: [0, 1, 2, 11, 4, 5, 6, 9, 8, 3, 10, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientationDelta: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [0, 1, 0, 0, 0, 0],\n      },\n    },\n    F: {\n      EDGES: {\n        permutation: [9, 1, 2, 3, 8, 5, 6, 7, 0, 4, 10, 11],\n        orientationDelta: [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientationDelta: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [0, 0, 1, 0, 0, 0],\n      },\n    },\n    R: {\n      EDGES: {\n        permutation: [0, 8, 2, 3, 4, 10, 6, 7, 5, 9, 1, 11],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientationDelta: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [0, 0, 0, 1, 0, 0],\n      },\n    },\n    B: {\n      EDGES: {\n        permutation: [0, 1, 10, 3, 4, 5, 11, 7, 8, 9, 6, 2],\n        orientationDelta: [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientationDelta: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [0, 0, 0, 0, 1, 0],\n      },\n    },\n    D: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientationDelta: [0, 0, 0, 0, 0, 1],\n      },\n    },\n    z: {\n      EDGES: {\n        permutation: [9, 3, 11, 7, 8, 1, 10, 5, 0, 4, 2, 6],\n        orientationDelta: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [3, 2, 6, 5, 0, 4, 7, 1],\n        orientationDelta: [1, 2, 1, 2, 2, 1, 2, 1],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientationDelta: [1, 1, 1, 1, 3, 1],\n      },\n    },\n    M: {\n      EDGES: {\n        permutation: [2, 1, 6, 3, 0, 5, 4, 7, 8, 9, 10, 11],\n        orientationDelta: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientationDelta: [2, 0, 0, 0, 2, 0],\n      },\n    },\n    E: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 8, 10],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientationDelta: [0, 0, 0, 0, 0, 0],\n      },\n    },\n    S: {\n      EDGES: {\n        permutation: [0, 3, 2, 7, 4, 1, 6, 5, 8, 9, 10, 11],\n        orientationDelta: [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientationDelta: [1, 1, 0, 1, 0, 1],\n      },\n    },\n    u: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 10, 8, 11, 9],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientationDelta: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    l: {\n      EDGES: {\n        permutation: [2, 1, 6, 11, 0, 5, 4, 9, 8, 3, 10, 7],\n        orientationDelta: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientationDelta: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientationDelta: [2, 1, 0, 0, 2, 0],\n      },\n    },\n    f: {\n      EDGES: {\n        permutation: [9, 3, 2, 7, 8, 1, 6, 5, 0, 4, 10, 11],\n        orientationDelta: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientationDelta: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientationDelta: [1, 1, 1, 1, 0, 1],\n      },\n    },\n    r: {\n      EDGES: {\n        permutation: [4, 8, 0, 3, 6, 10, 2, 7, 5, 9, 1, 11],\n        orientationDelta: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientationDelta: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientationDelta: [0, 0, 0, 1, 2, 2],\n      },\n    },\n    b: {\n      EDGES: {\n        permutation: [0, 5, 10, 1, 4, 7, 11, 3, 8, 9, 6, 2],\n        orientationDelta: [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientationDelta: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n      CENTERS: {\n        permutation: [3, 0, 2, 5, 4, 1],\n        orientationDelta: [3, 3, 0, 3, 1, 3],\n      },\n    },\n    d: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 9, 11, 8, 10],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientationDelta: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientationDelta: [0, 0, 0, 0, 0, 1],\n      },\n    },\n  },\n  derivedMoves: {\n    Uw: \"u\",\n    Lw: \"l\",\n    Fw: \"f\",\n    Rw: \"r\",\n    Bw: \"b\",\n    Dw: \"d\",\n\n    Uv: \"y\",\n    Lv: \"x'\",\n    Fv: \"z\",\n    Rv: \"x\",\n    Bv: \"z'\",\n    Dv: \"y'\",\n\n    \"2U\": \"u U'\",\n    \"2L\": \"l L'\",\n    \"2F\": \"f F'\",\n    \"2R\": \"r R'\",\n    \"2B\": \"b B'\",\n    \"2D\": \"d D'\",\n  },\n};\n", "import type { AlgLeaf, PuzzleSpecificSimplifyOptions } from \"../alg\";\nimport type { AppendOptions } from \"../alg/simplify\";\nimport type { KPuzzle } from \"../kpuzzle\";\nimport type { PuzzleGeometry } from \"../puzzle-geometry\";\nimport type { ExperimentalStickering } from \"../twisty\";\nimport type { StickeringMask } from \"./stickerings/mask\";\n\nexport type KeyMapping = { [keyCode: string]: AlgLeaf };\n\nexport interface PuzzleLoader {\n  id: string;\n  // shortName?: string;\n  fullName: string;\n  inventedBy?: string[];\n  inventionYear?: number; // TODO: date?\n  /** @deprecated */\n  def?: never;\n  kpuzzle: () => Promise<KPuzzle>; // TODO\n  svg: () => Promise<string>;\n  llSVG?: () => Promise<string>;\n  llFaceSVG?: () => Promise<string>;\n  pg?: () => Promise<PuzzleGeometry>;\n  stickeringMask?: (\n    stickering: ExperimentalStickering,\n  ) => Promise<StickeringMask>;\n  stickerings?: () => Promise<ExperimentalStickering[]>;\n  puzzleSpecificSimplifyOptions?: PuzzleSpecificSimplifyOptions;\n  puzzleSpecificSimplifyOptionsPromise?: Promise<PuzzleSpecificSimplifyOptions>; // TODO\n  keyMapping?: () => Promise<KeyMapping>; // TODO: async getter\n}\n\n// TODO: consolidate the `puzzleSpecificSimplifyOptionsPromise` with `puzzleSpecificSimplifyOptions` somehow, so that we don't have to do this.\nexport async function getPartialAppendOptionsForPuzzleSpecificSimplifyOptions(\n  puzzleLoader: PuzzleLoader,\n): Promise<AppendOptions> {\n  const puzzleSpecificSimplifyOptions =\n    await (puzzleLoader.puzzleSpecificSimplifyOptions ??\n      puzzleLoader.puzzleSpecificSimplifyOptionsPromise);\n  if (!puzzleSpecificSimplifyOptions) {\n    return {};\n  }\n  return { puzzleLoader: { puzzleSpecificSimplifyOptions } };\n}\n", "import { Alg } from \"../../../../alg\";\nimport type { KPuzzle, KPattern, KTransformation } from \"../../../../kpuzzle\";\n\nexport function puzzleOrientation2x2x2Idx(pattern: KPattern): number {\n  const inverse = pattern.experimentalToTransformation()!.invert();\n\n  const inverseDFL = inverse.transformationData[\"CORNERS\"];\n  return inverseDFL.permutation[6] * 3 + inverseDFL.orientationDelta[6];\n}\n\nconst puzzleOrientationCacheRaw: {\n  transformation: KTransformation;\n  alg: Alg;\n}[] = new Array<KTransformation>(24) as any;\n\nconst puzzleOrientationCacheInitialized = false;\n// We rely on the (first) caller to pass in the `KPuzzle`, so that we don't need to get our own synchronous reference.\nexport function puzzleOrientation2x2x2Cache(\n  kpuzzle: KPuzzle,\n): typeof puzzleOrientationCacheRaw {\n  if (!puzzleOrientationCacheInitialized) {\n    {\n      const uAlgs: Alg[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n        Alg.fromString(s),\n      );\n      const yAlg = new Alg(\"y\");\n      for (const uAlg of uAlgs) {\n        let transformation = kpuzzle.algToTransformation(uAlg);\n        for (let i = 0; i < 4; i++) {\n          transformation = transformation.applyAlg(yAlg);\n          const idx = puzzleOrientation2x2x2Idx(transformation.toKPattern());\n          puzzleOrientationCacheRaw[idx] = {\n            transformation: transformation.invert(),\n            alg: uAlg.concat(yAlg),\n          };\n        }\n      }\n    }\n  }\n  return puzzleOrientationCacheRaw;\n}\n\nexport function normalize2x2x2Orientation(pattern: KPattern): {\n  normalizedPattern: KPattern;\n  normalizationAlg: Alg;\n} {\n  const idx = puzzleOrientation2x2x2Idx(pattern);\n  const { transformation, alg } = puzzleOrientation2x2x2Cache(pattern.kpuzzle)[\n    idx\n  ];\n  return {\n    normalizedPattern: pattern.applyTransformation(transformation),\n    normalizationAlg: alg.invert(),\n  };\n}\n\n// The `options` argument is required for now, because we haven't yet come up\n// with a general way to specify different kinds of solved for the same puzle.\nexport function experimentalIs2x2x2Solved(\n  pattern: KPattern,\n  options: {\n    ignorePuzzleOrientation: boolean;\n  },\n): boolean {\n  if (options.ignorePuzzleOrientation) {\n    pattern = normalize2x2x2Orientation(pattern).normalizedPattern;\n  }\n  return !!pattern.experimentalToTransformation()!.isIdentityTransformation(); // TODO: Compare to start pattern instead?\n}\n", "import type { KPuzzle } from \"../kpuzzle\";\nimport type { PuzzleGeometry } from \"../puzzle-geometry\";\nimport type { PuzzleDescriptionString } from \"../puzzle-geometry/PGPuzzles\";\nimport {\n  asyncGetKPuzzle,\n  puzzleSpecificSimplifyOptionsPromise,\n} from \"./async/async-pg3d\";\nimport type { PuzzleLoader } from \"./PuzzleLoader\";\n\n// TODO: modify this to handle TwistyPlayer options\nexport async function descAsyncGetPuzzleGeometry(\n  desc: PuzzleDescriptionString,\n  options?: { includeCenterOrbits?: boolean; includeEdgeOrbits?: boolean },\n): Promise<PuzzleGeometry> {\n  const puzzleGeometry = await import(\"../puzzle-geometry\");\n  return puzzleGeometry.getPuzzleGeometryByDesc(desc, {\n    allMoves: true,\n    orientCenters: true,\n    addRotations: true,\n    ...options,\n  });\n}\n\nexport async function asyncGetKPuzzleByDesc(\n  desc: PuzzleDescriptionString,\n  options?: { includeCenterOrbits?: boolean; includeEdgeOrbits?: boolean },\n): Promise<KPuzzle> {\n  const pgPromise = descAsyncGetPuzzleGeometry(desc, options);\n  return asyncGetKPuzzle(pgPromise, `description: ${desc}`);\n}\n\n// TODO: Can we avoid relying on IDs to deduplicate work at higher levels?\nlet nextCustomID = 1;\n\nexport function customPGPuzzleLoader(\n  desc: PuzzleDescriptionString,\n  info?: {\n    fullName?: string;\n    inventedBy?: string[];\n    inventionYear?: number;\n  },\n): PuzzleLoader {\n  const customID = nextCustomID++;\n  let cachedKPuzzle: Promise<KPuzzle> | null = null;\n  const kpuzzlePromiseFn = async () => {\n    return (cachedKPuzzle ??= asyncGetKPuzzleByDesc(desc));\n  };\n  const puzzleLoader: PuzzleLoader = {\n    id: `custom-${customID}`,\n    fullName: info?.fullName ?? `Custom Puzzle (instance #${customID})`,\n    kpuzzle: kpuzzlePromiseFn,\n    svg: async () => {\n      const pg = await descAsyncGetPuzzleGeometry(desc);\n      return pg.generatesvg();\n    },\n    pg: async () => {\n      return descAsyncGetPuzzleGeometry(desc);\n    },\n    puzzleSpecificSimplifyOptionsPromise:\n      puzzleSpecificSimplifyOptionsPromise(kpuzzlePromiseFn),\n  };\n  if (info?.inventedBy) {\n    puzzleLoader.inventedBy = info.inventedBy;\n  }\n  if (info?.inventionYear) {\n    puzzleLoader.inventionYear = info.inventionYear;\n  }\n  return puzzleLoader;\n}\n", "import { KPuzzle } from \"../../kpuzzle\";\nimport { cube3x3x3KPuzzleDefinition as experimentalCube3x3x3KPuzzleDefinition } from \"../implementations/dynamic/3x3x3/3x3x3.kpuzzle.json\";\nimport { experimentalIs3x3x3Solved } from \"../implementations/dynamic/3x3x3/puzzle-orientation\";\nexport { getPartialAppendOptionsForPuzzleSpecificSimplifyOptions } from \"../PuzzleLoader\";\nexport { experimentalCube3x3x3KPuzzleDefinition };\n\n/** @deprecated */\nexport const experimental3x3x3KPuzzle = new KPuzzle(\n  experimentalCube3x3x3KPuzzleDefinition,\n);\nexperimentalCube3x3x3KPuzzleDefinition.experimentalIsPatternSolved =\n  experimentalIs3x3x3Solved;\n\nexport {\n  experimentalIs3x3x3Solved,\n  normalize3x3x3Orientation as experimentalNormalize3x3x3Orientation,\n  puzzleOrientation3x3x3Cache as experimentalPuzzleOrientation3x3x3Cache,\n  puzzleOrientation3x3x3Idx as experimentalPuzzleOrientation3x3x3Idx,\n} from \"../implementations/dynamic/3x3x3/puzzle-orientation\"; // TODO: Actually dynamic\nexport { experimentalStickerings } from \"../stickerings/puzzle-stickerings\";\n\nexport {\n  experimentalIs2x2x2Solved,\n  normalize2x2x2Orientation as experimentalNormalize2x2x2Orientation,\n  puzzleOrientation2x2x2Cache as experimentalPuzzleOrientation2x2x2Cache,\n  puzzleOrientation2x2x2Idx as experimentalPuzzleOrientation2x2x2Idx,\n} from \"../implementations/dynamic/2x2x2/puzzle-orientation\"; // TODO: Actually dynamic\n\nexport { customPGPuzzleLoader as experimentalCustomPGPuzzleLoader } from \"../customPGPuzzleLoader\";\nexport {\n  getFaceletStickeringMask as experimentalGetFaceletStickeringMask,\n  getPieceStickeringMask as experimentalGetPieceStickeringMask,\n  PieceStickering as ExperimentalPieceStickering,\n} from \"../stickerings/mask\";\nexport type {\n  FaceletMeshStickeringMask as ExperimentalFaceletMeshStickeringMask,\n  PieceStickeringMask as ExperimentalPieceStickeringMask,\n  StickeringMask as ExperimentalStickeringMask,\n} from \"../stickerings/mask\";\n\nexport type { KeyMapping } from \"../PuzzleLoader\";\n", "import { Alg } from \"../../../../alg\";\nimport { KPattern, type KTransformation } from \"../../../../kpuzzle\";\nimport { experimental3x3x3KPuzzle } from \"../../../cubing-private\";\n\nexport function puzzleOrientation3x3x3Idx(pattern: KPattern): [number, number] {\n  const idxU = pattern.patternData[\"CENTERS\"].pieces[0];\n  const idxD = pattern.patternData[\"CENTERS\"].pieces[5];\n  const unadjustedIdxL = pattern.patternData[\"CENTERS\"].pieces[1];\n  let idxL = unadjustedIdxL;\n  if (idxU < unadjustedIdxL) {\n    idxL--;\n  }\n  if (idxD < unadjustedIdxL) {\n    idxL--;\n  }\n  return [idxU, idxL];\n}\n\nconst puzzleOrientationCacheRaw: KTransformation[][] = new Array(6)\n  .fill(0)\n  .map(() => {\n    return new Array<KTransformation>(6);\n  });\n\nconst puzzleOrientationCacheInitialized = false;\nexport function puzzleOrientation3x3x3Cache(): KTransformation[][] {\n  if (!puzzleOrientationCacheInitialized) {\n    // We use a new block to avoid keeping a reference to temporary vars.\n    // kpuzzle todo\n    {\n      const uAlgs: Alg[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n        Alg.fromString(s),\n      );\n      const yAlg = new Alg(\"y\");\n      for (const uAlg of uAlgs) {\n        let transformation = experimental3x3x3KPuzzle.algToTransformation(uAlg);\n        for (let i = 0; i < 4; i++) {\n          transformation = transformation.applyAlg(yAlg);\n          const [idxU, idxL] = puzzleOrientation3x3x3Idx(\n            transformation.toKPattern(),\n          );\n          puzzleOrientationCacheRaw[idxU][idxL] = transformation.invert();\n        }\n      }\n    }\n  }\n  return puzzleOrientationCacheRaw;\n}\n\nexport function normalize3x3x3Orientation(pattern: KPattern): KPattern {\n  const [idxU, idxL] = puzzleOrientation3x3x3Idx(pattern);\n  const orientationTransformation = puzzleOrientation3x3x3Cache()[idxU][idxL];\n  return pattern.applyTransformation(orientationTransformation);\n}\n\n// The `options` argument is required for now, because we haven't yet come up\n// with a general way to specify different kinds of solved for the same puzle.\nexport function experimentalIs3x3x3Solved(\n  pattern: KPattern,\n  options: {\n    ignorePuzzleOrientation: boolean;\n    ignoreCenterOrientation: boolean;\n  },\n): boolean {\n  if (options.ignorePuzzleOrientation) {\n    pattern = normalize3x3x3Orientation(pattern);\n  }\n  // TODO(orientationMod)\n  if (options.ignoreCenterOrientation) {\n    pattern = new KPattern(pattern.kpuzzle, {\n      EDGES: pattern.patternData.EDGES,\n      CORNERS: pattern.patternData.CORNERS,\n      CENTERS: {\n        pieces: pattern.patternData.CENTERS.pieces,\n        orientation: new Array(6).fill(0),\n      },\n    });\n  }\n  return !!pattern.experimentalToTransformation()?.isIdentityTransformation(); // TODO: Compare to start state instead?\n}\n", "import type { PuzzleID } from \"../twisty\";\n\ninterface EventInfo {\n  puzzleID: PuzzleID;\n  eventName: string;\n}\n\nexport const wcaEvents: Record<string, EventInfo> = {\n  \"333\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Cube\" },\n  \"222\": { puzzleID: \"2x2x2\", eventName: \"2x2x2 Cube\" },\n  \"444\": { puzzleID: \"4x4x4\", eventName: \"4x4x4 Cube\" },\n  \"555\": { puzzleID: \"5x5x5\", eventName: \"5x5x5 Cube\" },\n  \"666\": { puzzleID: \"6x6x6\", eventName: \"6x6x6 Cube\" },\n  \"777\": { puzzleID: \"7x7x7\", eventName: \"7x7x7 Cube\" },\n  \"333bf\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Blindfolded\" },\n  \"333fm\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Fewest Moves\" },\n  \"333oh\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 One-Handed\" },\n  clock: { puzzleID: \"clock\", eventName: \"Clock\" },\n  minx: { puzzleID: \"megaminx\", eventName: \"Megaminx\" },\n  pyram: { puzzleID: \"pyraminx\", eventName: \"Pyraminx\" },\n  skewb: { puzzleID: \"skewb\", eventName: \"Skewb\" },\n  sq1: { puzzleID: \"square1\", eventName: \"Square-1\" },\n  \"444bf\": { puzzleID: \"4x4x4\", eventName: \"4x4x4 Blindfolded\" },\n  \"555bf\": { puzzleID: \"5x5x5\", eventName: \"5x5x5 Blindfolded\" },\n  \"333mbf\": { puzzleID: \"3x3x3\", eventName: \"3x3x3 Multi-Blind\" },\n};\n\n/** @category Event Info */\nexport function wcaEventInfo(event: string): EventInfo | null {\n  return wcaEvents[event] ?? null;\n}\n\nexport const twizzleEvents: Record<string, EventInfo> = {\n  ...wcaEvents,\n  fto: { puzzleID: \"fto\", eventName: \"Face-Turning Octahedron\" },\n  master_tetraminx: {\n    puzzleID: \"master_tetraminx\",\n    eventName: \"Master Tetraminx\",\n  },\n  kilominx: {\n    puzzleID: \"kilominx\",\n    eventName: \"Kilominx\",\n  },\n  redi_cube: {\n    puzzleID: \"redi_cube\",\n    eventName: \"Redi Cube\",\n  },\n  baby_fto: {\n    puzzleID: \"baby_fto\",\n    eventName: \"Baby FTO\",\n  },\n  loopover: {\n    puzzleID: \"loopover\",\n    eventName: \"Loopover\",\n  },\n};\n\n/** @category Event Info */\nexport function eventInfo(event: string): EventInfo | null {\n  return twizzleEvents[event] ?? null;\n}\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { experimentalIs2x2x2Solved } from \"../../../puzzles/cubing-private\";\nimport type { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"../../stickerings/cube-like-stickerings\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\n\n/** @category Specific Puzzles */\nexport const cube2x2x2: PuzzleLoader = {\n  id: \"2x2x2\",\n  fullName: \"2\u00D72\u00D72 Cube\",\n  kpuzzle: getCached(async () => {\n    const kpuzzle = new KPuzzle(\n      (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n        .cube2x2x2JSON,\n    );\n    kpuzzle.definition.experimentalIsPatternSolved = experimentalIs2x2x2Solved;\n    return kpuzzle;\n  }),\n  svg: async () =>\n    (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .cube2x2x2SVG,\n  llSVG: getCached(\n    async () =>\n      (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n        .cube2x2x2LLSVG,\n  ),\n  pg: getCached(async () => {\n    return asyncGetPuzzleGeometry(\"2x2x2\");\n  }),\n  stickeringMask: (\n    stickering: ExperimentalStickering,\n  ): Promise<StickeringMask> => cubeLikeStickeringMask(cube2x2x2, stickering),\n  stickerings: () =>\n    cubeLikeStickeringList(\"2x2x2\", { use3x3x3Fallbacks: true }),\n};\n", "import { Move, Pause, type AlgLeaf } from \"../../../alg\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n\nexport const cube3x3x3KeyMapping: { [key: number | string]: AlgLeaf } = {\n  KeyI: new Move(\"R\"),\n  KeyK: new Move(\"R'\"),\n  KeyW: new Move(\"B\"),\n  KeyO: new Move(\"B'\"),\n  KeyS: new Move(\"D\"),\n  KeyL: new Move(\"D'\"),\n  KeyD: new Move(\"L\"),\n  KeyE: new Move(\"L'\"),\n  KeyJ: new Move(\"U\"),\n  KeyF: new Move(\"U'\"),\n  KeyH: new Move(\"F\"),\n  KeyG: new Move(\"F'\"),\n\n  KeyC: new Move(\"l\"),\n  KeyR: new Move(\"l'\"),\n  KeyU: new Move(\"r\"),\n  KeyM: new Move(\"r'\"),\n\n  KeyX: new Move(\"d\"),\n  Comma: new Move(\"d'\"),\n\n  KeyT: new Move(\"x\"),\n  KeyY: new Move(\"x\"),\n  KeyV: new Move(\"x'\"),\n  KeyN: new Move(\"x'\"),\n  Semicolon: new Move(\"y\"),\n  KeyA: new Move(\"y'\"),\n  KeyP: new Move(\"z\"),\n  KeyQ: new Move(\"z'\"),\n\n  KeyZ: new Move(\"M'\"),\n  KeyB: new Move(\"M\"),\n  Period: new Move(\"M'\"),\n\n  Backquote: new Pause(),\n};\n", "import type { PuzzleSpecificSimplifyOptions } from \"../../../alg\";\nimport { Move, QuantumMove } from \"../../../alg\";\n\nenum Axis {\n  X = \"x axis\",\n  Y = \"y axis\",\n  Z = \"z axis\",\n}\n\nenum MoveSourceType {\n  INDEXABLE_SLICE_NEAR,\n  INDEXABLE_SLICE_FAR,\n  INDEXABLE_WIDE_NEAR,\n  INDEXABLE_WIDE_FAR,\n  SPECIFIC_SLICE,\n  ROTATION,\n}\n\ninterface MoveSourceInfo {\n  family: string;\n  direction: -1 | 1;\n  type: MoveSourceType;\n  from: number;\n  to: number;\n}\n\nfunction makeSourceInfo(\n  moveStrings: string[],\n  type: MoveSourceType,\n  from: number,\n  to: number,\n): MoveSourceInfo[] {\n  const output: MoveSourceInfo[] = [];\n  for (const moveString of moveStrings) {\n    const move = Move.fromString(moveString);\n    const { family, amount: direction } = move;\n    if (![-1, 1].includes(direction)) {\n      // TODO: test iner/outer\n      // TODO: Can we move this to a test file?\n      throw new Error(\"Invalid config move\");\n    }\n    output.push({ family, direction: direction as -1 | 1, type, from, to });\n  }\n  return output;\n}\n\ninterface AxisInfo {\n  sliceDiameter: number;\n  extendsThroughEntirePuzzle: boolean;\n  moveSourceInfos: MoveSourceInfo[];\n}\n\n// TODO: wide slices\nconst axisInfos: Record<Axis, AxisInfo> = {\n  [Axis.X]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"R\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"L'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"r\", \"Rw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 2),\n      ...makeSourceInfo([\"l'\", \"Lw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 2),\n      ...makeSourceInfo([\"M'\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"x\", \"Uv\", \"Dv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n  [Axis.Y]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"U\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"D'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"u\", \"Uw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 2),\n      ...makeSourceInfo([\"d'\", \"Dw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 2),\n      ...makeSourceInfo([\"E'\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"y\", \"Uv\", \"Dv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n  [Axis.Z]: {\n    sliceDiameter: 3,\n    extendsThroughEntirePuzzle: true,\n    moveSourceInfos: [\n      ...makeSourceInfo([\"F\"], MoveSourceType.INDEXABLE_SLICE_NEAR, 0, 3),\n      ...makeSourceInfo([\"B'\"], MoveSourceType.INDEXABLE_SLICE_FAR, 0, 3),\n      ...makeSourceInfo([\"f\", \"Fw\"], MoveSourceType.INDEXABLE_WIDE_NEAR, 0, 3),\n      ...makeSourceInfo([\"b'\", \"Bw'\"], MoveSourceType.INDEXABLE_WIDE_FAR, 0, 3),\n      ...makeSourceInfo([\"S\"], MoveSourceType.SPECIFIC_SLICE, 1, 2), // TODO: remove some indices?\n      ...makeSourceInfo([\"z\", \"Fv\", \"Bv'\"], MoveSourceType.ROTATION, 0, 3), // TODO: remove some indices?\n    ],\n  },\n};\n\nconst byFamily: Record<string, { axis: Axis; moveSourceInfo: MoveSourceInfo }> =\n  {};\nfor (const [axis, info] of Object.entries(axisInfos)) {\n  for (const moveSourceInfo of info.moveSourceInfos) {\n    byFamily[moveSourceInfo.family] = { axis: axis as Axis, moveSourceInfo };\n  }\n}\n\n// TODO: lazy initialization?\nconst byAxisThenType: Record<\n  Axis,\n  Partial<Record<MoveSourceType, MoveSourceInfo[]>>\n> = {} as any; // TODO: avoid typecast (using `Object.fromEntries`?)\nfor (const axis of Object.keys(axisInfos) as Axis[]) {\n  const entry: Partial<Record<MoveSourceType, MoveSourceInfo[]>> = {};\n  byAxisThenType[axis] = entry;\n  for (const moveSourceInfo of axisInfos[axis].moveSourceInfos) {\n    (entry[moveSourceInfo.type] ??= []).push(moveSourceInfo);\n  }\n}\n\n// TODO: consolidate lookup tables?\nconst byAxisThenSpecificSlices: Record<\n  Axis,\n  Map<number, MoveSourceInfo>\n> = {} as any; // TODO: avoid typecast (using `Object.fromEntries`?)\nfor (const axis of Object.keys(axisInfos) as Axis[]) {\n  const entry: Map<number, MoveSourceInfo> = new Map();\n  byAxisThenSpecificSlices[axis] = entry;\n  for (const moveSourceInfo of axisInfos[axis].moveSourceInfos) {\n    // We only want to use the first entry per slice index (in the unlikely case there are multiple).\n    if (!entry.get(moveSourceInfo.from)) {\n      entry.set(moveSourceInfo.from, moveSourceInfo);\n    }\n  }\n}\n\nfunction firstOfType(\n  axis: Axis,\n  moveSourceType: MoveSourceType,\n): MoveSourceInfo {\n  const entry = byAxisThenType[axis][moveSourceType]?.[0];\n  if (!entry) {\n    throw new Error(\n      `Could not find a reference move (axis: ${axis}, move source type: ${moveSourceType})`,\n    );\n  }\n  return entry;\n}\n\nconst areQuantumMovesSameAxis = (\n  quantumMove1: QuantumMove,\n  quantumMove2: QuantumMove,\n) => {\n  return (\n    byFamily[quantumMove1.family].axis === byFamily[quantumMove2.family].axis\n  );\n};\n\nfunction simplestMove(\n  axis: Axis,\n  from: number,\n  to: number,\n  directedAmount: number,\n): Move {\n  if (from + 1 === to) {\n    const sliceSpecificInfo = byAxisThenSpecificSlices[axis].get(from);\n    if (sliceSpecificInfo) {\n      return new Move(\n        new QuantumMove(sliceSpecificInfo.family),\n        directedAmount * sliceSpecificInfo.direction,\n      );\n    }\n  }\n\n  const axisInfo = axisInfos[axis];\n  const { sliceDiameter } = axisInfo;\n  if (from === 0 && to === sliceDiameter) {\n    const moveSourceInfo = firstOfType(axis, MoveSourceType.ROTATION);\n    return new Move(\n      new QuantumMove(moveSourceInfo.family),\n      directedAmount * moveSourceInfo.direction,\n    );\n  }\n\n  // const specificSliceInfo = byAxisThenSpecificSlices[axis].get(from);\n  const far = from + to > sliceDiameter; // (from + to) / 2 > sliceDiameter / 2\n  if (far) {\n    [from, to] = [sliceDiameter - to, sliceDiameter - from];\n  }\n\n  let outerLayer: number | null = from + 1; // change to 1-indexed\n  let innerLayer: number | null = to; // already 1-indexed\n  const slice = outerLayer === innerLayer;\n  if (slice) {\n    innerLayer = null;\n  }\n\n  if (outerLayer === 1) {\n    outerLayer = null;\n  }\n  if (slice && outerLayer === 1) {\n    innerLayer = null;\n  }\n  if (!slice && innerLayer === 2) {\n    innerLayer = null;\n  }\n\n  const moveSourceType = slice\n    ? far\n      ? MoveSourceType.INDEXABLE_SLICE_FAR\n      : MoveSourceType.INDEXABLE_SLICE_NEAR\n    : far\n      ? MoveSourceType.INDEXABLE_WIDE_FAR\n      : MoveSourceType.INDEXABLE_WIDE_NEAR;\n  const moveSourceInfo = firstOfType(axis, moveSourceType);\n  return new Move(\n    new QuantumMove(moveSourceInfo.family, innerLayer, outerLayer),\n    directedAmount * moveSourceInfo.direction,\n  );\n}\n\nfunction simplifySameAxisMoves(\n  moves: Move[],\n  quantumMod: boolean = true, // TODO\n): Move[] {\n  if (moves.length === 0) {\n    // TODO: can we use the type system to avoid this?\n    return [];\n  }\n\n  const axis: Axis = byFamily[moves[0].family].axis;\n  const axisInfo = axisInfos[axis];\n  const { sliceDiameter } = axisInfo;\n  const sliceDeltas = new Map<number, number>();\n  let lastCandidateRange: {\n    suffixLength: number;\n    sliceDeltas: Map<number, number>;\n  } | null = null;\n\n  function adjustValue(idx: number, relativeDelta: number) {\n    let newDelta = (sliceDeltas.get(idx) ?? 0) + relativeDelta;\n    if (quantumMod) {\n      newDelta = (newDelta % 4) + (5 % 4) - 1; // TODO: Use a passed-in `modMove`?\n    }\n    if (newDelta === 0) {\n      sliceDeltas.delete(idx);\n    } else {\n      sliceDeltas.set(idx, newDelta);\n    }\n  }\n  // TODO: go as far as possible instead of trying to take all moves, e.g. simplify U y y' to U.\n  let suffixLength = 0;\n  // TODO: Reverse iterator?\n  for (const move of Array.from(moves).reverse()) {\n    suffixLength++;\n    const { moveSourceInfo } = byFamily[move.family];\n    const directedAmount = move.amount * moveSourceInfo.direction;\n    // console.log({ directedAmount });\n    switch (moveSourceInfo.type) {\n      case MoveSourceType.INDEXABLE_SLICE_NEAR: {\n        // We convert to zero-indexing\n        const idx = (move.innerLayer ?? 1) - 1;\n        adjustValue(idx, directedAmount);\n        adjustValue(idx + 1, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_SLICE_FAR: {\n        // We convert to zero-indexing (which cancels with the subtraction from the slice width)\n        const idx = sliceDiameter - (move.innerLayer ?? 1);\n        adjustValue(idx, directedAmount);\n        adjustValue(idx + 1, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_WIDE_NEAR: {\n        adjustValue((move.outerLayer ?? 1) - 1, directedAmount);\n        adjustValue(move.innerLayer ?? 2, -directedAmount);\n        break;\n      }\n      case MoveSourceType.INDEXABLE_WIDE_FAR: {\n        adjustValue(sliceDiameter - (move.innerLayer ?? 2), directedAmount);\n        adjustValue(\n          sliceDiameter - ((move.outerLayer ?? 1) - 1),\n          -directedAmount,\n        );\n        break;\n      }\n      case MoveSourceType.SPECIFIC_SLICE: {\n        // We convert to zero-indexing (which cancels with the subtraction from the slice width)\n        adjustValue(moveSourceInfo.from, directedAmount);\n        adjustValue(moveSourceInfo.to, -directedAmount);\n        break;\n      }\n      case MoveSourceType.ROTATION: {\n        adjustValue(0, directedAmount);\n        adjustValue(sliceDiameter, -directedAmount);\n        break;\n      }\n    }\n    if ([0, 2].includes(sliceDeltas.size)) {\n      lastCandidateRange = { suffixLength, sliceDeltas: new Map(sliceDeltas) };\n    }\n  }\n  if (sliceDeltas.size === 0) {\n    return [];\n  }\n  // TODO: handle this check in the destructuring assignment?\n  if (!lastCandidateRange) {\n    return moves;\n  }\n  let [from, to] = lastCandidateRange.sliceDeltas.keys();\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n  const directedAmount = lastCandidateRange.sliceDeltas.get(from)!;\n  // TODO: Handle empty move\n  return [\n    ...moves.slice(0, -lastCandidateRange.suffixLength),\n    ...(directedAmount !== 0\n      ? [simplestMove(axis, from, to, directedAmount)]\n      : []),\n  ];\n}\n\nexport const puzzleSpecificSimplifyOptions333: PuzzleSpecificSimplifyOptions = {\n  quantumMoveOrder: () => 4,\n  // doQuantumMovesCommute: areQuantumMovesSameAxis,\n  axis: { areQuantumMovesSameAxis, simplifySameAxisMoves },\n};\n", "// Include 3x3x3 in the main bundle for better performance.\nimport type { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport { experimental3x3x3KPuzzle } from \"../../cubing-private\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"../../stickerings/cube-like-stickerings\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport { cube3x3x3KeyMapping } from \"./cube3x3x3KeyMapping\";\nimport { puzzleSpecificSimplifyOptions333 } from \"./puzzle-specific-simplifications\";\n\n/** @category Specific Puzzles */\nexport const cube3x3x3 = {\n  id: \"3x3x3\",\n  fullName: \"3\u00D73\u00D73 Cube\",\n  inventedBy: [\"Ern\u0151 Rubik\"],\n  inventionYear: 1974, // https://en.wikipedia.org/wiki/Rubik%27s_Cube#Conception_and_development\n  kpuzzle: getCached(async () => {\n    return experimental3x3x3KPuzzle;\n  }),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/3x3x3/puzzles-dynamic-3x3x3\"))\n      .cube3x3x3SVG;\n  }),\n  llSVG: getCached(async () => {\n    return (await import(\"../dynamic/3x3x3/puzzles-dynamic-3x3x3\"))\n      .cube3x3x3LLSVG;\n  }),\n  llFaceSVG: getCached(async () => {\n    return (await import(\"../dynamic/3x3x3/puzzles-dynamic-3x3x3\"))\n      .cube3x3x3LLFaceSVG;\n  }),\n  pg: getCached(async () => {\n    return asyncGetPuzzleGeometry(\"3x3x3\");\n  }),\n  stickeringMask: (\n    stickering: ExperimentalStickering,\n  ): Promise<StickeringMask> => cubeLikeStickeringMask(cube3x3x3, stickering),\n  stickerings: () => cubeLikeStickeringList(\"3x3x3\"),\n  puzzleSpecificSimplifyOptions: puzzleSpecificSimplifyOptions333,\n  keyMapping: async () => cube3x3x3KeyMapping, // TODO: async loading\n} satisfies PuzzleLoader;\n", "import { Move, type AlgLeaf } from \"../../../alg\";\nimport { cube3x3x3KeyMapping } from \"../3x3x3/cube3x3x3KeyMapping\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n\nexport const cube4x4x4KeyMapping: { [key: number | string]: AlgLeaf } = {\n  ...cube3x3x3KeyMapping,\n  KeyZ: new Move(\"m'\"),\n  KeyB: new Move(\"m\"),\n  Period: new Move(\"m'\"),\n};\n", "import { CubePGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\nimport { cube4x4x4KeyMapping } from \"./cube4x4x4KeyMapping\";\n\nconst cube4x4x4: PuzzleLoader = new CubePGPuzzleLoader({\n  id: \"4x4x4\",\n  fullName: \"4\u00D74\u00D74 Cube\",\n});\n\ncube4x4x4.llSVG = getCached(async () => {\n  return (await import(\"../dynamic/4x4x4/puzzles-dynamic-4x4x4\"))\n    .cube4x4x4LLSVG;\n});\ncube4x4x4.keyMapping = async () => cube4x4x4KeyMapping; // TODO: async loading\n\nexport { cube4x4x4 };\n", "import type { ExperimentalStickering } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  type StickeringMask,\n  PuzzleStickering,\n  StickeringManager,\n  type PieceSet,\n  PieceStickering,\n} from \"./mask\";\n\nexport async function ftoStickering(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  const kpuzzle = await puzzleLoader.kpuzzle();\n  const puzzleStickering = new PuzzleStickering(kpuzzle);\n  const m = new StickeringManager(kpuzzle);\n\n  const experimentalFTO_FC = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.or(m.moves([\"F\", \"BL\", \"BR\"])))]);\n  const experimentalFTO_F2T = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.move(\"F\"))]);\n  const experimentalFTO_SC = (): PieceSet =>\n    m.or([\n      experimentalFTO_F2T(),\n      m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"BL\", \"BR\"])))]),\n    ]);\n  const experimentalFTO_L2C = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"U\"), m.move(\"F\")]),\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n        m.and([m.move(\"BL\"), m.move(\"BR\")]),\n      ]),\n    );\n  const experimentalFTO_LBT = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n        m.and([m.move(\"BL\"), m.move(\"BR\")]),\n      ]),\n    );\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"experimental-fto-fc\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_FC()),\n        PieceStickering.Ignored,\n      );\n      break;\n    }\n    case \"experimental-fto-f2t\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_F2T()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_FC(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-sc\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_SC()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_F2T(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-l2c\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_L2C()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_SC(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-lbt\": {\n      puzzleStickering.set(\n        m.not(experimentalFTO_LBT()),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(experimentalFTO_L2C(), PieceStickering.Dim);\n      break;\n    }\n    case \"experimental-fto-l3t\": {\n      puzzleStickering.set(experimentalFTO_LBT(), PieceStickering.Dim);\n      break;\n    }\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering.toStickeringMask();\n}\n\nexport async function ftoStickerings(): Promise<ExperimentalStickering[]> {\n  return [\n    \"full\",\n    \"experimental-fto-fc\",\n    \"experimental-fto-f2t\",\n    \"experimental-fto-sc\",\n    \"experimental-fto-l2c\",\n    \"experimental-fto-lbt\",\n    \"experimental-fto-l3t\",\n  ];\n}\n", "import { Move, Pause, type AlgLeaf } from \"../../../alg\";\n\nexport const ftoKeyMapping: { [key: number | string]: AlgLeaf } = {\n  KeyI: new Move(\"R\"),\n  KeyK: new Move(\"R'\"),\n  KeyW: new Move(\"B\"),\n  KeyO: new Move(\"B'\"),\n  KeyS: new Move(\"D\"),\n  KeyL: new Move(\"D'\"),\n  KeyD: new Move(\"L\"),\n  KeyE: new Move(\"L'\"),\n  KeyJ: new Move(\"U\"),\n  KeyF: new Move(\"U'\"),\n  KeyH: new Move(\"F\"),\n  KeyG: new Move(\"F'\"),\n\n  KeyN: new Move(\"Rv'\"),\n  KeyC: new Move(\"l\"),\n  KeyR: new Move(\"l'\"),\n  KeyU: new Move(\"r\"),\n  KeyM: new Move(\"r'\"),\n\n  KeyX: new Move(\"d\"),\n  Comma: new Move(\"d'\"),\n\n  KeyT: new Move(\"Lv'\"),\n  KeyY: new Move(\"Rv\"),\n  KeyV: new Move(\"Lv\"),\n  Semicolon: new Move(\"Uv\"),\n  KeyA: new Move(\"Uv'\"),\n  KeyP: new Move(\"BR'\"),\n  KeyQ: new Move(\"BL\"),\n\n  KeyZ: new Move(\"BL'\"),\n  KeyB: new Move(\"T\"),\n  Period: new Move(\"BR\"),\n\n  Backquote: new Pause(),\n};\n", "import type { ExperimentalStickering } from \"../../../twisty\";\nimport { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport { ftoStickering } from \"../../stickerings/fto-stickerings\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport { ftoKeyMapping } from \"../fto/ftoKeyMapping\";\n\nclass BabyFTOPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      pgID: \"skewb diamond\",\n      id: \"baby_fto\",\n      fullName: \"Baby FTO\",\n      inventedBy: [\"Uwe M\u00E8ffert\"],\n      // inventionYear: TODO\n      setOrientationModTo1ForPiecesOfOrbits: [\"CENTERS\"],\n    });\n  }\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return ftoStickering(this, stickering);\n  }\n  override svg = getCached(async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .babyFTOSVG;\n  });\n  keyMapping = async () => ftoKeyMapping;\n}\n\nexport const baby_fto = new BabyFTOPuzzleLoader();\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const clock: PuzzleLoader = {\n  id: \"clock\",\n  fullName: \"Clock\",\n  inventedBy: [\"Christopher C. Wiggs\", \"Christopher J. Taylor\"],\n  inventionYear: 1988, // Patent application year: https://www.jaapsch.net/puzzles/patents/us4869506.pdf\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .clockJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .clockSVG;\n  }),\n};\n", "import type { ExperimentalStickering } from \"../../../twisty\";\nimport { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport {\n  ftoStickering,\n  ftoStickerings,\n} from \"../../stickerings/fto-stickerings\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport { ftoKeyMapping } from \"./ftoKeyMapping\";\n\nclass FTOPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      pgID: \"FTO\",\n      id: \"fto\",\n      fullName: \"Face-Turning Octahedron\",\n      inventedBy: [\"Karl Rohrbach\", \"David Pitcher\"], // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n      inventionYear: 1983, // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n    });\n  }\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return ftoStickering(this, stickering);\n  }\n  stickerings = ftoStickerings;\n  override svg = getCached(async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .ftoSVG;\n  });\n  keyMapping = async () => ftoKeyMapping;\n}\n\nexport const fto = new FTOPuzzleLoader();\n", "import type { PuzzleLoader } from \"../..\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport {\n  asyncGetKPuzzleByDesc,\n  descAsyncGetPuzzleGeometry,\n} from \"../../customPGPuzzleLoader\";\n\nconst KILOMINX_PUZZLE_DESCRIPTION = \"d f 0.56\";\n\n// TODO: Make this consistent with Megaminx corners\nexport const kilominx: PuzzleLoader = {\n  id: \"kilominx\",\n  fullName: \"Kilominx\",\n  kpuzzle: getCached(() =>\n    asyncGetKPuzzleByDesc(KILOMINX_PUZZLE_DESCRIPTION, {\n      includeCenterOrbits: false,\n      includeEdgeOrbits: false,\n    }),\n  ),\n  pg: () =>\n    descAsyncGetPuzzleGeometry(KILOMINX_PUZZLE_DESCRIPTION, {\n      includeCenterOrbits: false,\n      includeEdgeOrbits: false,\n    }),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .kilominxSVG;\n  }),\n};\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const loopover: PuzzleLoader = {\n  id: \"loopover\",\n  fullName: \"Loopover\",\n  inventedBy: [\"Cary Huang\"],\n  inventionYear: 2018,\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n          .loopoverJSON,\n      ),\n  ),\n  svg: async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .loopoverSVG;\n  },\n};\n", "import type { ExperimentalStickering } from \"../../twisty\";\nimport type { PuzzleLoader } from \"../PuzzleLoader\";\nimport type { StickeringMask } from \"./mask\";\nimport {\n  cubeLikeStickeringList,\n  cubeLikeStickeringMask,\n} from \"./cube-like-stickerings\";\nimport { from } from \"../../vendor/mit/p-lazy/p-lazy\";\n\n// TODO: cache calculations?\nexport async function megaminxStickeringMask(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<StickeringMask> {\n  // TODO: optimize lookup instead of looking through a list\n  if ((await megaminxStickerings()).includes(stickering)) {\n    return cubeLikeStickeringMask(puzzleLoader, stickering);\n  }\n  console.warn(\n    `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n  );\n  return cubeLikeStickeringMask(puzzleLoader, \"full\");\n}\n\nconst megaminxStickeringListPromise: Promise<string[]> = from(() =>\n  cubeLikeStickeringList(\"megaminx\"),\n);\nexport function megaminxStickerings(): Promise<string[]> {\n  return megaminxStickeringListPromise;\n}\n", "import { Move, Pause, type AlgLeaf } from \"../../../alg\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n\nexport const megaminxKeyMapping: { [key: number | string]: AlgLeaf } = {\n  KeyI: new Move(\"R\"),\n  KeyK: new Move(\"R'\"),\n  KeyW: new Move(\"B\"),\n  KeyO: new Move(\"B'\"),\n  KeyS: new Move(\"FR\"),\n  KeyL: new Move(\"FR'\"),\n  KeyD: new Move(\"L\"),\n  KeyE: new Move(\"L'\"),\n  KeyJ: new Move(\"U\"),\n  KeyF: new Move(\"U'\"),\n  KeyH: new Move(\"F\"),\n  KeyG: new Move(\"F'\"),\n\n  KeyC: new Move(\"Lw\"),\n  KeyR: new Move(\"Lw'\"),\n  KeyU: new Move(\"Rw\"),\n  KeyM: new Move(\"Rw'\"),\n\n  KeyX: new Move(\"d\"),\n  Comma: new Move(\"d'\"),\n\n  KeyT: new Move(\"Rv\"),\n  KeyY: new Move(\"Rv\"),\n  KeyV: new Move(\"Rv'\"),\n  KeyN: new Move(\"Rv'\"),\n  Semicolon: new Move(\"y\"),\n  KeyA: new Move(\"y'\"),\n  KeyP: new Move(\"z\"),\n  KeyQ: new Move(\"z'\"),\n\n  KeyZ: new Move(\"2L'\"),\n  KeyB: new Move(\"2R\"),\n  Period: new Move(\"2R'\"),\n\n  Backquote: new Pause(),\n};\n", "import type { ExperimentalStickering } from \"../../../twisty\";\nimport { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { StickeringMask } from \"../../stickerings/mask\";\nimport {\n  megaminxStickeringMask,\n  megaminxStickerings,\n} from \"../../stickerings/megaminx-stickerings\";\nimport { megaminxKeyMapping } from \"./megaminxKeyMapping\";\n\nclass MegaminxPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      id: \"megaminx\",\n      fullName: \"Megaminx\",\n      // Too many simultaneous inventors to name.\n      inventionYear: 1981, // Earliest date from https://www.jaapsch.net/puzzles/megaminx.htm\n    });\n  }\n  stickeringMask(stickering: ExperimentalStickering): Promise<StickeringMask> {\n    return megaminxStickeringMask(this, stickering);\n  }\n  stickerings = megaminxStickerings;\n\n  llSVG = getCached(async () => {\n    return (await import(\"../dynamic/megaminx/puzzles-dynamic-megaminx\"))\n      .megaminxLLSVG;\n  });\n\n  keyMapping = async () => megaminxKeyMapping; // TODO: async loading\n}\n\nexport const megaminx = new MegaminxPuzzleLoader();\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const melindas2x2x2x2: PuzzleLoader = {\n  id: \"melindas2x2x2x2\",\n  fullName: \"Melinda's 2\u00D72\u00D72\u00D72\",\n  inventedBy: [\"Melinda Green\"],\n  // inventionYear: 20__, // TODO\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .melindas2x2x2x2OrbitJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .melindas2x2x2x2OrbitSVG;\n  }),\n};\n", "import { PGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { getCached } from \"../../async/lazy-cached\";\n\nclass PyraminxPuzzleLoader extends PGPuzzleLoader {\n  constructor() {\n    super({\n      id: \"pyraminx\",\n      fullName: \"Pyraminx\",\n      inventedBy: [\"Uwe Meffert\"],\n    });\n  }\n  override svg = getCached(async () => {\n    return (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .pyraminxSVG;\n  });\n}\n\nexport const pyraminx = new PyraminxPuzzleLoader();\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const rediCube: PuzzleLoader = {\n  id: \"redi_cube\",\n  fullName: \"Redi Cube\",\n  // Announced 2009-07-21: https://www.youtube.com/watch?v=cjfMzA1u3vM\n  // https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1520\n  inventedBy: [\"Oskar van Deventer\"],\n  inventionYear: 2009,\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n          .rediCubeJSON,\n      ),\n  ),\n  svg: async () => {\n    return (await import(\"../dynamic/unofficial/puzzles-dynamic-unofficial\"))\n      .rediCubeSVG;\n  },\n};\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const square1: PuzzleLoader = {\n  id: \"square1\",\n  fullName: \"Square-1\",\n  inventedBy: [\"Karel Hr\u0161el\", \"Vojtech Kopsk\u00FD\"],\n  inventionYear: 1990, // Czech patent application year: http://spisy.upv.cz/Patents/FullDocuments/277/277266.pdf\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .sq1HyperOrbitJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .sq1HyperOrbitSVG;\n  }),\n};\n", "import { KPuzzle } from \"../../../kpuzzle\";\nimport { getCached } from \"../../async/lazy-cached\";\nimport type { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const tri_quad: PuzzleLoader = {\n  id: \"tri_quad\",\n  fullName: \"TriQuad\",\n  inventedBy: [\"Bram Cohen\", \"Carl Hoff\"],\n  inventionYear: 2018, // https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=6809\n  kpuzzle: getCached(\n    async () =>\n      new KPuzzle(\n        (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n          .triQuadJSON,\n      ),\n  ),\n  svg: getCached(async () => {\n    return (await import(\"../dynamic/side-events/puzzles-dynamic-side-events\"))\n      .triQuadSVG;\n  }),\n};\n", "export { eventInfo, twizzleEvents, wcaEventInfo, wcaEvents } from \"./events\";\nexport { cube2x2x2, cube3x3x3 };\nexport type { PuzzleLoader };\n\nimport type { PuzzleLoader } from \"./PuzzleLoader\";\nimport { CubePGPuzzleLoader, PGPuzzleLoader } from \"./async/async-pg3d\";\nimport { cube2x2x2 } from \"./implementations/2x2x2\";\nimport { cube3x3x3 } from \"./implementations/3x3x3\";\nimport { cube4x4x4 } from \"./implementations/4x4x4\";\nimport { baby_fto } from \"./implementations/baby_fto\";\nimport { clock } from \"./implementations/clock\";\nimport { fto } from \"./implementations/fto\";\nimport { kilominx } from \"./implementations/kilominx\";\nimport { loopover } from \"./implementations/loopover\";\nimport { megaminx } from \"./implementations/megaminx\";\nimport { melindas2x2x2x2 } from \"./implementations/melindas2x2x2x2\";\nimport { pyraminx } from \"./implementations/pyraminx\";\nimport { rediCube } from \"./implementations/redi-cube\";\nimport { square1 } from \"./implementations/square1\";\nimport { tri_quad } from \"./implementations/tri_quad\";\n\n/** @category All Puzzles */\nexport const puzzles: Record<string, PuzzleLoader> = {\n  /******** Start of WCA Puzzles *******/\n  \"3x3x3\": cube3x3x3,\n  \"2x2x2\": cube2x2x2,\n  \"4x4x4\": cube4x4x4,\n  \"5x5x5\": new CubePGPuzzleLoader({ id: \"5x5x5\", fullName: \"5\u00D75\u00D75 Cube\" }),\n  \"6x6x6\": new CubePGPuzzleLoader({ id: \"6x6x6\", fullName: \"6\u00D76\u00D76 Cube\" }),\n  \"7x7x7\": new CubePGPuzzleLoader({ id: \"7x7x7\", fullName: \"7\u00D77\u00D77 Cube\" }),\n  \"40x40x40\": new CubePGPuzzleLoader({\n    id: \"40x40x40\",\n    fullName: \"40\u00D740\u00D740 Cube\",\n  }),\n  // 3x3x3 Blindfolded\n  // 3x3x3 Fewest Moves\n  // 3x3x3 One-Handed\n  clock,\n  megaminx: megaminx,\n  pyraminx,\n  skewb: new PGPuzzleLoader({\n    id: \"skewb\",\n    fullName: \"Skewb\",\n    inventedBy: [\"Tony Durham\"], // https://www.jaapsch.net/puzzles/skewb.htm\n    // inventionYear: 1982, // 1982 is actually the year of Hofstadter's column.\n  }),\n  square1,\n  // 4x4x4 Blindfolded\n  // 5x5x5 Blindfolded\n  /******** End of WCA puzzles ********/\n  fto,\n  gigaminx: new PGPuzzleLoader({\n    id: \"gigaminx\",\n    fullName: \"Gigaminx\",\n    inventedBy: [\"Tyler Fox\"],\n    inventionYear: 2006, // Earliest date from https://www.twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1475\n  }),\n  master_tetraminx: new PGPuzzleLoader({\n    pgID: \"master tetraminx\",\n    id: \"master_tetraminx\",\n    fullName: \"Master Tetraminx\",\n    inventedBy: [\"Katsuhiko Okamoto\"], // Using master pyraminx: https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1352\n    inventionYear: 2002, // Using master pyraminx: https://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1352\n  }),\n  kilominx,\n  redi_cube: rediCube,\n  melindas2x2x2x2,\n  loopover,\n  tri_quad,\n  baby_fto,\n};\n", "export const twistyDebugGlobals: {\n  // WARNING: The current shared renderer implementation has performance issues, especially in Safari.\n  // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n  // TODO: use a dedicated renderer while fullscreen?\n  // - \"auto\": Default heuristics.\n  // - \"always\": Force all new (i.e. constructed in the future) renderers to be shared\n  // - \"never\": Force all new (i.e. constructed in the future) renderers to be dedicated\n  shareAllNewRenderers: \"auto\" | \"always\" | \"never\";\n  showRenderStats: boolean;\n} = {\n  shareAllNewRenderers: \"auto\",\n  showRenderStats: false,\n};\n\nexport function setTwistyDebug(\n  options: Partial<typeof twistyDebugGlobals>,\n): void {\n  for (const [key, value] of Object.entries(options)) {\n    if (key in twistyDebugGlobals) {\n      (twistyDebugGlobals as any)[key] = value;\n    }\n  }\n}\n", "// TODO: Pick a much better name.\nexport class PromiseFreshener<T> {\n  #latestAssignedIdx = 0;\n  #latestResolvedIdx = 0;\n\n  // TODO: reject instead? Drop?\n  async queue(\n    p: Promise<T>,\n  ): Promise<{ fresh: false } | { fresh: true; result: T }> {\n    const idx = ++this.#latestAssignedIdx;\n    const result = await p;\n    if (idx > this.#latestResolvedIdx) {\n      this.#latestResolvedIdx = idx;\n      return {\n        fresh: true,\n        result: result,\n      };\n    } else {\n      return { fresh: false };\n    }\n  }\n}\n\n// This will silenty drop a queued Promise (i.e. not resolve it) if a\n// newer queued one already resolved first. This is useful for classes that want\n// to know the \"latest\" state of something without jumping back to an older\n// value by accident.\n// TODO: Remove this because it's too easy to misuse?\nexport class StaleDropper<T> {\n  #latestAssignedIdx = 0;\n  #latestResolvedIdx = 0;\n\n  queue(p: Promise<T>): Promise<T> {\n    // biome-ignore lint/suspicious/noAsyncPromiseExecutor: This is a very rare case where we *do* want to drop a Promise sometimes.\n    return new Promise(async (resolve, reject) => {\n      try {\n        const idx = ++this.#latestAssignedIdx;\n        const result = await p;\n        if (idx > this.#latestResolvedIdx) {\n          this.#latestResolvedIdx = idx;\n          resolve(result);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n", "import { from } from \"../../../vendor/mit/p-lazy/p-lazy\";\nimport { StaleDropper } from \"../PromiseFreshener\";\nimport type { UserVisibleErrorTracker } from \"../UserVisibleErrorTracker\";\n\ntype InputRecord = Record<string, any>;\n\nexport type InputProps<T extends InputRecord> = {\n  [s in keyof T]: TwistyPropParent<T[s]>;\n};\n\ntype InputPromises<T extends InputRecord> = {\n  [s in keyof T]: Promise<T[s]>;\n};\n\ninterface SourceEventDetail<OutputType> {\n  sourceProp: TwistyPropSource<OutputType, any>;\n  value: Promise<OutputType>; // TODO: remove?\n  generation: number;\n}\n\ntype SourceEvent<T> = CustomEvent<SourceEventDetail<T>>;\n\nexport type PromiseOrValue<T> = T | Promise<T>;\n\n// Values of T must be immutable.\nlet globalSourceGeneration = 0; // This is incremented before being used, so 1 will be the first active value.\nexport abstract class TwistyPropParent<T> {\n  public abstract get(): Promise<T>;\n\n  // Don't overwrite this. Overwrite `canReuseValue` instead.\n  public canReuse(v1: T, v2: T): boolean {\n    return v1 === v2 || this.canReuseValue(v1, v2);\n  }\n\n  // Overwrite with a cheap semantic comparison when possible.\n  // Note that this is not called if `v1 === v2` (in which case the value is automatically reused).\n  protected canReuseValue(_v1: T, _v2: T): boolean {\n    return false;\n  }\n\n  debugGetChildren(): TwistyPropDerived<any, any>[] {\n    return Array.from(this.#children.values());\n  }\n\n  // Propagation\n\n  #children: Set<TwistyPropDerived<any, any>> = new Set();\n  protected addChild(child: TwistyPropDerived<any, any>): void {\n    this.#children.add(child);\n  }\n\n  protected removeChild(child: TwistyPropDerived<any, any>): void {\n    this.#children.delete(child);\n  }\n\n  protected lastSourceGeneration: number = 0;\n  // Synchronously marks all descendants as stale. This doesn't actually\n  // literally mark as stale, but it updates the last source generation, which\n  // is used to tell if a cahced result is stale.\n  protected markStale(sourceEvent: SourceEvent<any>): void {\n    if (sourceEvent.detail.generation !== globalSourceGeneration) {\n      // The full stale propagation is synchronous, so there should not be a new one yet.\n      throw new Error(\"A TwistyProp was marked stale too late!\");\n    }\n    if (this.lastSourceGeneration === sourceEvent.detail.generation) {\n      // Already propagated.\n      return;\n    }\n    this.lastSourceGeneration = sourceEvent.detail.generation;\n    for (const child of this.#children) {\n      child.markStale(sourceEvent);\n    }\n    // We schedule sending out events *after* the (synchronous) propagation has happened, in\n    // case one of the listeners updates a source again.\n    this.#scheduleRawDispatch();\n  }\n\n  #rawListeners: Set<() => void> = new Set();\n  /** @deprecated */\n  addRawListener(listener: () => void, options?: { initial: boolean }): void {\n    this.#rawListeners.add(listener);\n    if (options?.initial) {\n      listener(); // TODO: wrap in a try?\n    }\n  }\n\n  /** @deprecated */\n  removeRawListener(listener: () => void): void {\n    this.#rawListeners.delete(listener);\n  }\n\n  /** @deprecated */\n  #scheduleRawDispatch(): void {\n    if (!this.#rawDispatchPending) {\n      this.#rawDispatchPending = true;\n      setTimeout(() => this.#dispatchRawListeners(), 0);\n    }\n  }\n\n  #rawDispatchPending: boolean = false;\n  #dispatchRawListeners(): void {\n    if (!this.#rawDispatchPending) {\n      throw new Error(\"Invalid dispatch state!\");\n    }\n    for (const listener of this.#rawListeners) {\n      listener(); // TODO: wrap in a try?\n    }\n    this.#rawDispatchPending = false;\n  }\n\n  #freshListeners: Map<(value: T) => void, () => void> = new Map();\n  // TODO: Pick a better name.\n  public addFreshListener(listener: (value: T) => void): void {\n    const staleDropper: StaleDropper<T> = new StaleDropper<T>();\n    let lastResult: T | null = null;\n    const callback = async () => {\n      const result = await staleDropper.queue(this.get());\n      if (lastResult !== null && this.canReuse(lastResult, result)) {\n        return;\n      }\n      lastResult = result;\n      listener(result);\n    };\n    this.#freshListeners.set(listener, callback);\n    this.addRawListener(callback, { initial: true });\n  }\n\n  public removeFreshListener(listener: (value: T) => void): void {\n    this.removeRawListener(this.#freshListeners.get(listener)!); // TODO: throw a custom error?\n    this.#freshListeners.delete(listener);\n  }\n}\n\nexport abstract class TwistyPropSource<\n  OutputType,\n  InputType = OutputType,\n> extends TwistyPropParent<OutputType> {\n  #value: Promise<OutputType>;\n\n  public abstract getDefaultValue(): PromiseOrValue<OutputType>;\n\n  constructor(initialValue?: PromiseOrValue<InputType>) {\n    super();\n    this.#value = from(() => this.getDefaultValue());\n    if (initialValue) {\n      this.#value = this.deriveFromPromiseOrValue(initialValue, this.#value);\n    }\n  }\n\n  set(input: PromiseOrValue<InputType>): void {\n    this.#value = this.deriveFromPromiseOrValue(input, this.#value);\n\n    const sourceEventDetail: SourceEventDetail<OutputType> = {\n      sourceProp: this,\n      value: this.#value,\n      generation: ++globalSourceGeneration,\n    };\n    this.markStale(\n      new CustomEvent<SourceEventDetail<OutputType>>(\"stale\", {\n        detail: sourceEventDetail,\n      }),\n    );\n  }\n\n  async get(): Promise<OutputType> {\n    return this.#value;\n  }\n\n  protected async deriveFromPromiseOrValue(\n    input: PromiseOrValue<InputType>,\n    oldValuePromise: Promise<OutputType>,\n  ): Promise<OutputType> {\n    return this.derive(await input, oldValuePromise);\n  }\n\n  // TODO: add an indirect layer to cache the derivation?\n  protected abstract derive(\n    input: InputType,\n    oldValuePromise: Promise<OutputType>,\n  ): PromiseOrValue<OutputType>;\n}\n\nexport abstract class SimpleTwistyPropSource<\n  SimpleType,\n> extends TwistyPropSource<SimpleType> {\n  protected override derive(input: SimpleType): PromiseOrValue<SimpleType> {\n    return input;\n  }\n}\n\n// TODO: Can we support `null` as a valid output value without loosening type\n// safety?\nexport const NO_VALUE = Symbol(\"no value\");\nexport type NoValueType = typeof NO_VALUE;\n\nexport abstract class TwistyPropDerived<\n  InputTypes extends InputRecord,\n  OutputType,\n> extends TwistyPropParent<OutputType> {\n  // cachedInputs:\n  #parents: InputProps<InputTypes>;\n\n  constructor(\n    parents: InputProps<InputTypes>,\n    protected userVisibleErrorTracker?: UserVisibleErrorTracker,\n  ) {\n    super();\n    this.#parents = parents;\n    for (const parent of Object.values(parents)) {\n      (\n        parent as TwistyPropDerived<InputProps<InputTypes>, OutputType>\n      ).addChild(this);\n    }\n  }\n\n  #cachedLastSuccessfulCalculation: {\n    inputs: InputTypes;\n    output: Promise<OutputType>;\n    generation: number;\n  } | null = null;\n\n  #cachedLatestGenerationCalculation: {\n    output: Promise<OutputType>;\n    generation: number;\n  } | null = null;\n\n  public async get(): Promise<OutputType> {\n    const generation = this.lastSourceGeneration;\n\n    if (this.#cachedLatestGenerationCalculation?.generation === generation) {\n      return this.#cachedLatestGenerationCalculation.output;\n    }\n\n    const latestGenerationCalculation = {\n      generation,\n      output: this.#cacheDerive(\n        this.#getParents(),\n        generation,\n        this.#cachedLastSuccessfulCalculation,\n      ),\n    };\n    this.#cachedLatestGenerationCalculation = latestGenerationCalculation;\n\n    this.userVisibleErrorTracker?.reset();\n    return latestGenerationCalculation.output;\n  }\n\n  async #getParents(): Promise<InputTypes> {\n    const inputValuePromises: InputPromises<InputRecord> = {} as any; // TODO\n    for (const [key, parent] of Object.entries(this.#parents)) {\n      (inputValuePromises as Record<string, Promise<unknown>>)[key] = (\n        parent as TwistyPropParent<unknown>\n      ).get();\n    }\n\n    const inputs: InputTypes = {} as any; // TODO\n    for (const key in this.#parents) {\n      inputs[key] = (await (\n        inputValuePromises as Record<string, Promise<unknown>>\n      )[key]) as any;\n    }\n    return inputs;\n  }\n\n  async #cacheDerive(\n    inputsPromise: PromiseOrValue<InputTypes>,\n    generation: number,\n    cachedLatestGenerationCalculation: {\n      inputs: InputTypes;\n      output: Promise<OutputType>;\n      generation: number;\n    } | null = null,\n  ): Promise<OutputType> {\n    const inputs = await inputsPromise;\n\n    const cache = (output: OutputType): OutputType => {\n      this.#cachedLastSuccessfulCalculation = {\n        inputs,\n        output: Promise.resolve(output),\n        generation,\n      };\n      return output;\n    };\n\n    if (!cachedLatestGenerationCalculation) {\n      return cache(await this.derive(inputs));\n    }\n\n    const cachedInputs = cachedLatestGenerationCalculation.inputs;\n    for (const key in this.#parents) {\n      const parent = this.#parents[key];\n      if (!parent.canReuse(inputs[key], cachedInputs[key])) {\n        return cache(await this.derive(inputs));\n      }\n    }\n\n    return cachedLatestGenerationCalculation.output;\n  }\n\n  protected abstract derive(input: InputTypes): PromiseOrValue<OutputType>;\n}\n\nexport class FreshListenerManager {\n  #disconnectionFunctions: (() => void)[] = [];\n\n  addListener<T>(\n    prop: TwistyPropParent<T>,\n    listener: (value: T) => void,\n  ): void {\n    let disconnected = false;\n    const wrappedListener = (value: T) => {\n      if (disconnected) {\n        // TODO\n        // console.warn(\"Should be disconnected!\");\n        return;\n      }\n      listener(value);\n    };\n\n    prop.addFreshListener(wrappedListener);\n\n    this.#disconnectionFunctions.push(() => {\n      prop.removeFreshListener(wrappedListener);\n      disconnected = true;\n    });\n  }\n\n  // TODO: Figure out the signature to let us do overloads\n  /** @deprecated */\n  public addMultiListener3<U, V, W>(\n    props: [TwistyPropParent<U>, TwistyPropParent<V>, TwistyPropParent<W>],\n    listener: (values: [U, V, W]) => void,\n  ): void {\n    this.addMultiListener(props as any, listener as any); // TODO\n  }\n  public addMultiListener<U, V>(\n    props: [TwistyPropParent<U>, TwistyPropParent<V>],\n    listener: (values: [U, V]) => void,\n  ) {\n    let disconnected = false;\n\n    // We're going to get one initial call per prop. We'll ignore all but one.\n    let initialIgnoresLeft = props.length - 1;\n    const wrappedListener = async (_: any) => {\n      if (initialIgnoresLeft > 0) {\n        initialIgnoresLeft--;\n        return;\n      }\n      if (disconnected) {\n        // TODO\n        // console.warn(\"Should be disconnected!\");\n        return;\n      }\n      // We rely on `TwistyProp` caching to give us the full set of latest\n      // values efficiently.\n      const promises = (props as TwistyPropParent<any>[]).map((prop) =>\n        prop.get(),\n      );\n      const values = await Promise.all(promises);\n      listener(values as any); // TODO: fix up types\n    };\n\n    for (const prop of props) {\n      prop.addFreshListener(wrappedListener);\n    }\n\n    this.#disconnectionFunctions.push(() => {\n      for (const prop of props) {\n        prop.removeFreshListener(wrappedListener);\n      }\n      disconnected = true;\n    });\n  }\n\n  public disconnect(): void {\n    for (const disconnectionFunction of this.#disconnectionFunctions) {\n      disconnectionFunction();\n    }\n  }\n}\n", "// Debounces `requestAnimationFrame()`.\nexport class RenderScheduler {\n  private animFrameID: number | null = null;\n  private animFrame = this.animFrameWrapper.bind(this);\n  constructor(private callback: (timestamp: DOMHighResTimeStamp) => void) {}\n\n  requestIsPending(): boolean {\n    return !!this.animFrameID;\n  }\n\n  requestAnimFrame(): void {\n    if (!this.animFrameID) {\n      this.animFrameID = requestAnimationFrame(this.animFrame);\n    }\n  }\n\n  cancelAnimFrame(): void {\n    if (this.animFrameID) {\n      cancelAnimationFrame(this.animFrameID);\n      this.animFrameID = 0;\n    }\n  }\n\n  private animFrameWrapper(timestamp: DOMHighResTimeStamp): void {\n    this.animFrameID = 0;\n    this.callback(timestamp);\n  }\n}\n\n// An interface for classes to use to expose their scheduling.\nexport interface Schedulable {\n  scheduleRender(): void;\n}\n", "import { SimpleTwistyPropSource } from \"../../TwistyProp\";\n\n// TODO: turn these maps into lists?\nexport const hintFaceletStyles = {\n  floating: true, // default\n  none: true,\n};\nexport type HintFaceletStyle = keyof typeof hintFaceletStyles;\nexport type HintFaceletStyleWithAuto = HintFaceletStyle | \"auto\";\n\nexport class HintFaceletProp extends SimpleTwistyPropSource<HintFaceletStyleWithAuto> {\n  getDefaultValue(): HintFaceletStyleWithAuto {\n    return \"auto\";\n  }\n}\n", "export const TAU = Math.PI * 2;\nexport const DEGREES_PER_RADIAN = 360 / TAU;\n", "// Workarounds for `node`.\n// TODO: figure out how to remove this.\n\n// This stub does not need to be callable, just constructable to satisfy the `node` loader.\nclass HTMLElementStub {}\n\nlet HTMLElementShim: typeof HTMLElement;\nif (globalThis.HTMLElement) {\n  HTMLElementShim = globalThis.HTMLElement;\n} else {\n  HTMLElementShim = HTMLElementStub as any;\n}\n\nexport { HTMLElementShim };\n\nclass CustomElementsStub {\n  define(): void {\n    // nothing\n  }\n}\n\nlet customElementsShim: typeof customElements;\n\nif (globalThis.customElements) {\n  customElementsShim = globalThis.customElements;\n} else {\n  customElementsShim = new CustomElementsStub() as any;\n}\n\nexport { customElementsShim };\n\nlet cssStyleSheetShim: typeof CSSStyleSheet;\n\nclass CSSStyleSheetStub {\n  replaceSync(): void {\n    // nothing\n  }\n}\n\nif (globalThis.CSSStyleSheet) {\n  cssStyleSheetShim = globalThis.CSSStyleSheet;\n} else {\n  cssStyleSheetShim = CSSStyleSheetStub as any;\n}\n\nexport { cssStyleSheetShim };\n", "import {\n  HTMLElementShim,\n  customElementsShim,\n} from \"./node-custom-element-shims\";\n\n// - Wrapped element\n//   - Shadow root\n//     - Content wrapper\nexport class ManagedCustomElement extends HTMLElementShim {\n  public readonly shadow: ShadowRoot; // TODO: hide this\n  public readonly contentWrapper: HTMLDivElement; // TODO: can we get rid of this wrapper?\n\n  constructor(options?: { mode?: \"open\" | \"closed\" }) {\n    super();\n    this.shadow = this.attachShadow({ mode: options?.mode ?? \"closed\" });\n\n    this.contentWrapper = document.createElement(\"div\");\n    this.contentWrapper.classList.add(\"wrapper\");\n    this.shadow.appendChild(this.contentWrapper);\n  }\n\n  // Add the source, if not already added.\n  // Returns the existing if it's already on the element.\n  protected addCSS(cssSource: CSSStyleSheet): void {\n    this.shadow.adoptedStyleSheets.push(cssSource);\n  }\n\n  protected removeCSS(cssSource: CSSStyleSheet) {\n    const cssIndex = this.shadow.adoptedStyleSheets.indexOf(cssSource);\n    if (typeof cssIndex !== \"undefined\") {\n      this.shadow.adoptedStyleSheets.splice(cssIndex, cssIndex + 1);\n    }\n  }\n\n  public addElement<T extends Node>(element: T): T {\n    return this.contentWrapper.appendChild(element);\n  }\n\n  public prependElement<T extends Node>(element: T): void {\n    this.contentWrapper.prepend(element);\n  }\n\n  public removeElement<T extends Node>(element: T): T {\n    return this.contentWrapper.removeChild(element);\n  }\n}\n\ncustomElementsShim.define(\n  \"twisty-managed-custom-element\",\n  ManagedCustomElement,\n);\n", "/**\n * @author mrdoob / http://mrdoob.com/\n * ESM conversion by Lucas Garron, 2021-12-21\n */\n\nconst performance:\n  | null\n  | (Performance & {\n      memory?: {\n        usedJSHeapSize: number;\n        jsHeapSizeLimit: number;\n      };\n    }) = globalThis.performance;\n\nexport class Stats {\n  mode = 0;\n\n  dom = document.createElement(\"div\");\n\n  constructor() {\n    this.dom.style.cssText =\n      \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n    this.dom.addEventListener(\n      \"click\",\n      (event) => {\n        event.preventDefault();\n        this.showPanel(++this.mode % this.dom.children.length);\n      },\n      false,\n    );\n\n    this.showPanel(0);\n  }\n\n  addPanel(panel: StatsPanel): StatsPanel {\n    this.dom.appendChild(panel.dom);\n    return panel;\n  }\n\n  showPanel(id: number): void {\n    for (let i = 0; i < this.dom.children.length; i++) {\n      (this.dom.children[i] as HTMLElement).style.display =\n        i === id ? \"block\" : \"none\";\n    }\n\n    this.mode = id;\n  }\n\n  beginTime = (performance || Date).now();\n  prevTime = this.beginTime;\n  frames = 0;\n\n  fpsPanel = this.addPanel(new StatsPanel(\"FPS\", \"#0ff\", \"#002\"));\n  msPanel = this.addPanel(new StatsPanel(\"MS\", \"#0f0\", \"#020\"));\n  memPanel = performance?.memory\n    ? this.addPanel(new StatsPanel(\"MB\", \"#f08\", \"#201\"))\n    : null;\n  REVISION = 16;\n\n  begin() {\n    this.beginTime = (performance || Date).now();\n  }\n\n  end() {\n    this.frames++;\n\n    const time = (performance || Date).now();\n\n    this.msPanel.update(time - this.beginTime, 200);\n\n    if (time >= this.prevTime + 1000) {\n      this.fpsPanel.update((this.frames * 1000) / (time - this.prevTime), 100);\n\n      this.prevTime = time;\n      this.frames = 0;\n\n      if (this.memPanel) {\n        const memory = performance!.memory!;\n        this.memPanel.update(\n          memory.usedJSHeapSize / 1048576,\n          memory.jsHeapSizeLimit / 1048576,\n        );\n      }\n    }\n\n    return time;\n  }\n\n  update() {\n    this.beginTime = this.end();\n  }\n}\n\nconst PR = Math.round(globalThis?.window?.devicePixelRatio ?? 1);\n\nconst WIDTH = 80 * PR;\nconst HEIGHT = 48 * PR;\nconst TEXT_X = 3 * PR;\nconst TEXT_Y = 2 * PR;\nconst GRAPH_X = 3 * PR;\nconst GRAPH_Y = 15 * PR;\nconst GRAPH_WIDTH = 74 * PR;\nconst GRAPH_HEIGHT = 30 * PR;\n\nexport class StatsPanel {\n  min = Infinity;\n  max = 0;\n  dom = document.createElement(\"canvas\");\n  context = this.dom.getContext(\"2d\")!;\n  constructor(\n    private name: string,\n    private fg: string,\n    private bg: string,\n  ) {\n    this.dom.width = WIDTH;\n    this.dom.height = HEIGHT;\n    this.dom.style.cssText = \"width:80px;height:48px\";\n\n    this.context.font = `bold ${9 * PR}px Helvetica,Arial,sans-serif`;\n    this.context.textBaseline = \"top\";\n\n    this.context.fillStyle = bg;\n    this.context.fillRect(0, 0, WIDTH, HEIGHT);\n\n    this.context.fillStyle = fg;\n    this.context.fillText(name, TEXT_X, TEXT_Y);\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    this.context.fillStyle = bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n  }\n\n  update(value: number, maxValue: number) {\n    this.min = Math.min(this.min, value);\n    this.max = Math.max(this.max, value);\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 1;\n    this.context.fillRect(0, 0, WIDTH, GRAPH_Y);\n    this.context.fillStyle = this.fg;\n    this.context.fillText(\n      `${Math.round(value)} ${this.name} (${Math.round(this.min)}-${Math.round(\n        this.max,\n      )})`,\n      TEXT_X,\n      TEXT_Y,\n    );\n\n    this.context.drawImage(\n      this.dom,\n      GRAPH_X + PR,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n      GRAPH_X,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * GRAPH_HEIGHT),\n    );\n  }\n}\n", "// TODO can we remove the cached proxy?\n\n// In theory we can, but we've run into situations where imports are not properly cached.\nlet cachedConstructorProxy: Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> | null = null;\n\nexport async function bulk3DCode(): Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> {\n  return (cachedConstructorProxy ??= import(\n    \"./dynamic-entries/twisty-dynamic-3d\"\n  ));\n}\n", "let globalPixelRatioOverride: number | null = null;\nexport function setGlobalPixelRatioOverride(override: number | null): void {\n  globalPixelRatioOverride = override;\n}\n\n// TODO: Handle if you move across screens?\nexport function pixelRatio(): number {\n  return globalPixelRatioOverride ?? (devicePixelRatio || 1);\n}\n", "// export class Drag() {\n\n// }\n\ninterface DragInfo {\n  attachedInfo: Record<any, any>;\n  hasMoved: boolean;\n  lastClientX: number;\n  lastClientY: number;\n  lastTimeStamp: number;\n}\n\ntype PointerID = number;\n\nexport interface DragMovementInfo {\n  attachedInfo: Record<any, any>;\n  movementX: number;\n  movementY: number;\n  elapsedMs: number;\n}\n\nexport interface UpInfo {\n  attachedInfo: Record<any, any>;\n}\n\nexport interface PressInfo {\n  normalizedX: number;\n  normalizedY: number;\n  rightClick: boolean;\n  keys: {\n    // TODO: group these\n    altKey: boolean;\n    ctrlOrMetaKey: boolean;\n    shiftKey: boolean;\n  };\n}\n\n// Chrome can report movements as low as `0.0000152587890625` even if the cursor did not move at all. So we need a treshold insteadl.\nconst MOVEMENT_EPSILON = 0.1; // px\n\nexport class DragTracker extends EventTarget {\n  #dragInfoMap: Map<PointerID, DragInfo> = new Map();\n\n  constructor(public readonly target: HTMLElement) {\n    super();\n  }\n\n  // Idempotent\n  start() {\n    this.addTargetListener(\"pointerdown\", this.onPointerDown.bind(this));\n    // Prevent right-click on desktop (only tested on macOS Chrome/Safari/Firefox) so we can detect right-click moves.\n    // TODO: Can we do this selectively, e.g. only on the puzzle? That way we could allow right-click to download the canvas. Unfortunately, it would probably require a sync calculation.\n    this.addTargetListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n    // Prevent touch scrolling (preventing default on `pointermove` doesn't work).\n    this.addTargetListener(\"touchmove\", (e) => e.preventDefault());\n    // Prevent zooming on double-tap (iOS).\n    // This is because `dblclick` works to zoom in, but does *not* work to zoom out. So the user can get stuck zoomed into the player without a way to zoom out.\n    this.addTargetListener(\"dblclick\", (e) => e.preventDefault());\n  }\n\n  // Idempotent\n  stop(): void {\n    for (const [eventType, listener] of this.#targetListeners.entries()) {\n      this.target.removeEventListener(eventType, listener);\n    }\n    this.#targetListeners.clear();\n    this.#lazyListenersRegistered = false;\n  }\n\n  #targetListeners = new Map<string, (e: MouseEvent) => any>();\n  addTargetListener(eventType: string, listener: (e: MouseEvent) => any) {\n    if (!this.#targetListeners.has(eventType)) {\n      this.target.addEventListener(eventType, listener);\n      this.#targetListeners.set(eventType, listener);\n    }\n  }\n\n  // This allows us to avoid getting a callback every time the pointer moves over the canvas, until we have a down event.\n  // TODO: Ideally we'd also support unregistering when we're certain there are no more active touches. But this means we need to properly handle every way a pointer \"click\" can end, which is tricky across environments (due to e.g. mouse vs. touch vs. stylues, canvas/viewport/window/scroll boundaries, right-click and other ways of losing focus, etc.), so we conservatively leave the listeners on.\n  #lazyListenersRegistered: boolean = false;\n  #registerLazyListeners(): void {\n    if (this.#lazyListenersRegistered) {\n      return;\n    }\n    this.addTargetListener(\"pointermove\", this.onPointerMove.bind(this)); // TODO: only register this after pointer down.\n    this.addTargetListener(\"pointerup\", this.onPointerUp.bind(this));\n    this.#lazyListenersRegistered = true;\n  }\n\n  #clear(e: PointerEvent): void {\n    this.#dragInfoMap.delete(e.pointerId);\n  }\n\n  // `null`: means: ignore this result (no movement, or not\n  #trackDrag(e: PointerEvent): {\n    movementInfo: DragMovementInfo | null;\n    hasMoved: boolean;\n  } {\n    // TODO: Find a way to detect if this is an active press, in a way that works cross-platform.\n    // if (e.buttons === 0) {\n    //   return { movementInfo: null, hasMoved: false };\n    // }\n    const existing = this.#dragInfoMap.get(e.pointerId);\n    if (!existing) {\n      return { movementInfo: null, hasMoved: false };\n    }\n    // We would try to use `e.movementX`/`e.movementY`, except Safari:\n    // - Does not have those values on i[Pad]OS.\n    // - Will always report `0` for these values on macOS.\n    // https://bugs.webkit.org/show_bug.cgi?id=220194\n    //\n    // The following are all insufficiently powerful for detecting the Safari `0` bug:\n    // - `\"movementX\" in e`\n    // - `e.movementX !== \"undefined\"`\n    // - `e.hasOwnProperty(\"movementX\")`\n\n    let movementInfo: DragMovementInfo;\n    if ((e.movementX ?? 0) !== 0 || (e.movementY ?? 0) !== 0) {\n      // We optimistically try to catch sub-pixel movements in Chrome.\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.movementX,\n        movementY: e.movementY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    } else {\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.clientX - existing.lastClientX,\n        movementY: e.clientY - existing.lastClientY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    }\n    existing.lastClientX = e.clientX;\n    existing.lastClientY = e.clientY;\n    existing.lastTimeStamp = e.timeStamp;\n    if (\n      Math.abs(movementInfo.movementX) < MOVEMENT_EPSILON &&\n      Math.abs(movementInfo.movementY) < MOVEMENT_EPSILON\n    ) {\n      return { movementInfo: null, hasMoved: existing.hasMoved };\n    } else {\n      existing.hasMoved = true;\n      return { movementInfo, hasMoved: existing.hasMoved };\n    }\n  }\n\n  private onPointerDown(e: PointerEvent) {\n    this.#registerLazyListeners();\n    const newDragInfo: DragInfo = {\n      attachedInfo: {},\n      hasMoved: false,\n      lastClientX: e.clientX,\n      lastClientY: e.clientY,\n      lastTimeStamp: e.timeStamp,\n    };\n    this.#dragInfoMap.set(e.pointerId, newDragInfo);\n    this.target.setPointerCapture(e.pointerId);\n  }\n\n  private onPointerMove(e: PointerEvent) {\n    const movementInfo = this.#trackDrag(e).movementInfo;\n    if (movementInfo) {\n      e.preventDefault();\n      this.dispatchEvent(\n        new CustomEvent(\"move\", {\n          detail: movementInfo,\n        }),\n      );\n    }\n  }\n\n  private onPointerUp(e: PointerEvent) {\n    const trackDragResult = this.#trackDrag(e);\n    const existing = this.#dragInfoMap.get(e.pointerId)!; // TODO\n    this.#clear(e);\n    this.target.releasePointerCapture(e.pointerId); // TODO: unnecessary?\n    let event: CustomEvent;\n    if (trackDragResult.hasMoved) {\n      // TODO: send proper movement/momentum since last move event.\n      event = new CustomEvent<UpInfo>(\"up\", {\n        detail: { attachedInfo: existing.attachedInfo },\n      });\n    } else {\n      const { altKey, ctrlKey, metaKey, shiftKey } = e;\n      event = new CustomEvent<PressInfo>(\"press\", {\n        detail: {\n          normalizedX: (e.offsetX / this.target.offsetWidth) * 2 - 1,\n          normalizedY: 1 - (e.offsetY / this.target.offsetHeight) * 2,\n          rightClick: !!(e.button & 2),\n          keys: {\n            altKey,\n            ctrlOrMetaKey: ctrlKey || metaKey,\n            shiftKey,\n          },\n        },\n      });\n    }\n    this.dispatchEvent(event);\n  }\n}\n", "// TODO: https://stackoverflow.com/a/40443642\n\n// let shareAllNewRenderers: boolean = false;\n\n// // WARNING: The current shared renderer implementation is not every efficient.\n// // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n// // TODO: use a dedicated renderer while fullscreen?\n// export function experimentalSetShareAllNewRenderers(share: boolean): void {\n//   shareAllNewRenderers = share;\n// }\n\n// const sharedRenderer: WebGLRenderer | null = null;\n\nimport { bulk3DCode } from \"../../heavy-code-imports/3d\";\nimport type {\n  Camera,\n  LinearSRGBColorSpace,\n  Scene,\n  WebGLRenderer,\n} from \"../../heavy-code-imports/three-types\";\nimport { pixelRatio } from \"../canvas\";\n\nconst renderers: Promise<WebGLRenderer>[] = [];\n\n// Render result is guaranteed to be available synchronously at resolution time.\nexport async function rawRenderPooled(\n  width: number,\n  height: number,\n  scene: Scene,\n  camera: Camera,\n): Promise<HTMLCanvasElement> {\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n  const renderer = await renderers[0];\n  // TODO: scissoring\n  renderer.setSize(width, height); // TODO: is it faster if we cache values and only call this when necessary?\n  renderer.render(scene, camera);\n\n  return renderer.domElement;\n}\n\n// let haveSet = false;\nexport async function renderPooled(\n  width: number,\n  height: number,\n  canvas: HTMLCanvasElement,\n  scene: Scene,\n  camera: Camera,\n): Promise<void> {\n  if (width === 0 || height === 0) {\n    return;\n  }\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n\n  const rendererCanvas = await rawRenderPooled(width, height, scene, camera);\n\n  // TODO: Should we cache this? Seems to take about 0.0001ms to get.\n  const context = canvas.getContext(\"2d\")!;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.drawImage(rendererCanvas, 0, 0);\n}\n\n// Workaround to avoid an import of `three`.\nconst linearSRGBColorSpace =\n  \"srgb-linear\" satisfies typeof LinearSRGBColorSpace;\n\nexport async function newRenderer(): Promise<WebGLRenderer> {\n  const rendererConstructor = (await bulk3DCode()).ThreeWebGLRenderer;\n  const renderer = new rendererConstructor({\n    antialias: true,\n    alpha: true,\n  });\n  renderer.outputColorSpace = linearSRGBColorSpace; // TODO(https://github.com/cubing/cubing.js/issues/308): remove this\n  renderer.setPixelRatio(pixelRatio());\n  return renderer;\n}\n", "// The `position` values are a hack for a bug in Safari where the canvas either\n// grows infinitely, or takes up the full `fr` of any encompassing grid (making\n// the contents of that element e.g. over 100% of its height). `contain:\n// content` is a good fix for this, but there is no indication that Safari will\n// support it soon. https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n\nimport { cssStyleSheetShim } from \"../node-custom-element-shims\";\n\nexport const twisty3DVantageCSS = new cssStyleSheetShim();\ntwisty3DVantageCSS.replaceSync(\n  `\n:host {\n  width: 384px;\n  height: 256px;\n  display: grid;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  display: grid;\n  overflow: hidden;\n  place-content: center;\n  contain: strict;\n}\n\n.loading {\n  width: 4em;\n  height: 4em;\n  border-radius: 2.5em;\n  border: 0.5em solid rgba(0, 0, 0, 0);\n  border-top: 0.5em solid rgba(0, 0, 0, 0.7);\n  border-right: 0.5em solid rgba(0, 0, 0, 0.7);\n  animation: fade-in-delayed 4s, rotate 1s linear infinite;\n}\n\n@keyframes fade-in-delayed {\n  0% { opacity: 0; }\n  25% {opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* TODO: This is due to stats hack. Replace with \\`canvas\\`. */\n.wrapper > canvas {\n  max-width: 100%;\n  max-height: 100%;\n  animation: fade-in 0.25s ease-in;\n}\n\n@keyframes fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.wrapper.invisible {\n  opacity: 0;\n}\n\n.wrapper.drag-input-enabled > canvas {\n  cursor: grab;\n}\n\n.wrapper.drag-input-enabled > canvas:active {\n  cursor: grabbing;\n}\n`,\n);\n", "import type { Vector3 } from \"three/src/Three.js\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { bulk3DCode } from \"../../heavy-code-imports/3d\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport type { DragMovementInfo, DragTracker } from \"./DragTracker\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\n\nconst INERTIA_DEFAULT: boolean = true;\n\nconst INERTIA_DURATION_MS = 500;\n// If the first inertial render is this long after the last move, we assume the\n// user has halted the cursor and we consider inertia to have \"timed out\". We\n// never begin animating the inertia.\nconst INERTIA_TIMEOUT_MS = 50;\n\nconst VERTICAL_MOVEMENT_BASE_SCALE = 0.75;\n\n// progress is from 0 to 1.\nfunction momentumScale(progress: number) {\n  // This is the exponential curve flipped so that\n  // - The slope at progress = 0 is 1 (this corresponds to \"x = 1\" on the normal\n  //   curve).\n  // - The scale exponentially \"decays\" until progress = 1.\n  // This means the scale at the end will be about 0.418\n  return (Math.exp(1 - progress) - (1 - progress)) / (1 - Math.E) + 1;\n}\n\nclass Inertia {\n  private scheduler = new RenderScheduler(this.render.bind(this));\n  private lastTimestamp: number;\n  constructor(\n    private startTimestamp: number,\n    private momentumX: number,\n    private momentumY: number,\n    private callback: (movementX: number, movementY: number) => void,\n  ) {\n    this.scheduler.requestAnimFrame();\n    this.lastTimestamp = startTimestamp;\n  }\n\n  private render(now: DOMHighResTimeStamp) {\n    const progressBefore =\n      (this.lastTimestamp - this.startTimestamp) / INERTIA_DURATION_MS;\n    const progressAfter = Math.min(\n      1,\n      (now - this.startTimestamp) / INERTIA_DURATION_MS,\n    );\n\n    if (\n      progressBefore === 0 &&\n      progressAfter > INERTIA_TIMEOUT_MS / INERTIA_DURATION_MS\n    ) {\n      // The user has already paused for a while. Don't start any inertia.\n      return;\n    }\n\n    const delta = momentumScale(progressAfter) - momentumScale(progressBefore);\n\n    // TODO: For now, we only carry horizontal momentum. If this should stay, we\n    // can remove the plumbing for the Y dimension.\n    this.callback(this.momentumX * delta * 1000, this.momentumY * delta * 1000);\n\n    if (progressAfter < 1) {\n      this.scheduler.requestAnimFrame();\n    }\n    this.lastTimestamp = now;\n  }\n}\n\nexport async function positionToOrbitCoordinates(\n  position: Vector3,\n): Promise<OrbitCoordinates> {\n  const spherical = new (await bulk3DCode()).ThreeSpherical();\n  spherical.setFromVector3(position);\n  return {\n    latitude: 90 - spherical.phi * DEGREES_PER_RADIAN,\n    longitude: spherical.theta * DEGREES_PER_RADIAN,\n    distance: spherical.radius,\n  };\n}\n\ninterface TwistyOrbitControlsDragAttachedInfo {\n  lastTemperedX: number;\n  lastTemperedY: number;\n  timestamp: number;\n}\n\n// TODO: change mouse cursor while moving.\nexport class TwistyOrbitControls {\n  /** @deprecated */\n  experimentalInertia: boolean = INERTIA_DEFAULT;\n  private onMovementBound = this.onMovement.bind(this);\n  public experimentalHasBeenMoved: boolean = false;\n  constructor(\n    private model: TwistyPlayerModel,\n    private mirror: boolean,\n    private canvas: HTMLCanvasElement,\n    private dragTracker: DragTracker,\n  ) {\n    this.dragTracker.addEventListener(\"move\", this.onMove.bind(this));\n    this.dragTracker.addEventListener(\"up\", this.onUp.bind(this));\n  }\n\n  // f is the fraction of the canvas traversed per ms.\n  temperMovement(f: number): number {\n    // This is scaled to be linear for small values, but to reduce large values\n    // by a significant factor.\n    return (Math.sign(f) * Math.log(Math.abs(f * 10) + 1)) / 6;\n  }\n\n  onMove(e: CustomEvent<DragMovementInfo>): void {\n    e.detail.attachedInfo ??= {};\n\n    const { temperedX, temperedY } = this.onMovement(\n      e.detail.movementX,\n      e.detail.movementY,\n    );\n    const attachedInfo = e.detail\n      .attachedInfo as TwistyOrbitControlsDragAttachedInfo;\n    attachedInfo.lastTemperedX = temperedX * 10;\n    attachedInfo.lastTemperedY = temperedY * 10;\n    attachedInfo.timestamp = e.timeStamp; // TODO\n  }\n\n  onMovement(\n    movementX: number,\n    movementY: number,\n  ): {\n    temperedX: number;\n    temperedY: number;\n  } {\n    const scale = this.mirror ? -1 : 1;\n\n    // TODO: refactor\n    const minDim = Math.min(this.canvas.offsetWidth, this.canvas.offsetHeight);\n\n    const temperedX = this.temperMovement(movementX / minDim);\n    const temperedY = this.temperMovement(\n      (movementY / minDim) * VERTICAL_MOVEMENT_BASE_SCALE,\n    );\n    this.model.twistySceneModel.orbitCoordinatesRequest.set(\n      (async () => {\n        const prevCoords =\n          await this.model.twistySceneModel.orbitCoordinates.get();\n\n        const newCoords = {\n          latitude:\n            prevCoords.latitude + 2 * temperedY * DEGREES_PER_RADIAN * scale,\n          longitude: prevCoords.longitude - 2 * temperedX * DEGREES_PER_RADIAN,\n        };\n        return newCoords;\n      })(),\n    );\n    return { temperedX, temperedY };\n  }\n\n  onUp(e: CustomEvent<DragMovementInfo>): void {\n    e.preventDefault();\n    if (\n      \"lastTemperedX\" in e.detail.attachedInfo &&\n      \"lastTemperedY\" in e.detail.attachedInfo &&\n      \"timestamp\" in e.detail.attachedInfo &&\n      e.timeStamp - e.detail.attachedInfo.timestamp < 60 // TODO\n    ) {\n      new Inertia(\n        e.timeStamp, // TODO\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedX,\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedY,\n        this.onMovementBound,\n      ); // TODO: cancel inertia\n    }\n  }\n}\n", "import type { PerspectiveCamera, WebGLRenderer } from \"three/src/Three.js\";\nimport { Stats } from \"../../../vendor/mit/three/examples/jsm/libs/stats.modified.module\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { twistyDebugGlobals } from \"../../debug\";\nimport { bulk3DCode } from \"../../heavy-code-imports/3d\";\nimport { StaleDropper } from \"../../model/PromiseFreshener\";\nimport type { DragInputMode } from \"../../model/props/puzzle/state/DragInputProp\";\nimport type { TwistyPropParent } from \"../../model/props/TwistyProp\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport { pixelRatio } from \"../canvas\";\nimport { ManagedCustomElement } from \"../ManagedCustomElement\";\nimport { customElementsShim } from \"../node-custom-element-shims\";\nimport { DragTracker, type PressInfo } from \"./DragTracker\";\nimport { newRenderer, renderPooled } from \"./RendererPool\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\nimport type { Twisty3DSceneWrapper } from \"./Twisty3DSceneWrapper\";\nimport { twisty3DVantageCSS } from \"./Twisty3DVantage.css\";\nimport { TwistyOrbitControls } from \"./TwistyOrbitControls\";\n\nexport async function setCameraFromOrbitCoordinates(\n  camera: PerspectiveCamera,\n  orbitCoordinates: OrbitCoordinates,\n  backView: boolean = false,\n): Promise<void> {\n  const spherical = new (await bulk3DCode()).ThreeSpherical(\n    orbitCoordinates.distance,\n    (90 - (backView ? -1 : 1) * orbitCoordinates.latitude) / DEGREES_PER_RADIAN,\n    ((backView ? 180 : 0) + orbitCoordinates.longitude) / DEGREES_PER_RADIAN,\n  );\n  spherical.makeSafe();\n  camera.position.setFromSpherical(spherical);\n  camera.lookAt(0, 0, 0);\n}\n\nlet dedicatedRenderersSoFar = 0;\nconst DEFAULT_MAX_DEDICATED_RENDERERS = 2; // This allows for a front view and a back view (or two separate front views).\nlet sharingRenderers = false;\nfunction shareRenderer(): boolean {\n  if (twistyDebugGlobals.shareAllNewRenderers !== \"auto\") {\n    if (!twistyDebugGlobals.shareAllNewRenderers) {\n      dedicatedRenderersSoFar++;\n    }\n    return twistyDebugGlobals.shareAllNewRenderers !== \"never\";\n  }\n  if (dedicatedRenderersSoFar < DEFAULT_MAX_DEDICATED_RENDERERS) {\n    dedicatedRenderersSoFar++;\n    return false;\n  } else {\n    sharingRenderers = true;\n    return true;\n  }\n}\n\nexport function haveStartedSharingRenderers(): boolean {\n  return sharingRenderers;\n}\n\nexport class Twisty3DVantage extends ManagedCustomElement {\n  scene: Twisty3DSceneWrapper | null = null;\n\n  stats: Stats | null = null;\n\n  private rendererIsShared: boolean = shareRenderer();\n\n  loadingElement: HTMLDivElement | null = null;\n  constructor(\n    private model?: TwistyPlayerModel,\n    scene?: Twisty3DSceneWrapper,\n    private options?: { backView?: boolean },\n  ) {\n    super();\n    this.scene = scene ?? null;\n\n    this.loadingElement = this.addElement(document.createElement(\"div\"));\n    this.loadingElement.classList.add(\"loading\");\n\n    if (twistyDebugGlobals.showRenderStats) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = \"absolute\";\n      this.contentWrapper.appendChild(this.stats.dom);\n    }\n  }\n\n  async connectedCallback(): Promise<void> {\n    this.addCSS(twisty3DVantageCSS);\n    this.addElement((await this.canvasInfo()).canvas);\n\n    this.#onResize();\n    const observer = new ResizeObserver(this.#onResize.bind(this));\n    observer.observe(this.contentWrapper);\n    this.orbitControls(); // Instantiate orbit controls\n    this.#setupBasicPresses();\n\n    this.scheduleRender();\n  }\n\n  async #setupBasicPresses(): Promise<void> {\n    const dragTracker = await this.#dragTracker();\n    dragTracker.addEventListener(\"press\", async (e: CustomEvent<PressInfo>) => {\n      const movePressInput =\n        await this.model!.twistySceneModel.movePressInput.get();\n      if (movePressInput !== \"basic\") {\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"press\", {\n          detail: {\n            pressInfo: e.detail,\n            cameraPromise: this.camera(),\n          },\n        }),\n      );\n    });\n  }\n\n  #onResizeStaleDropper = new StaleDropper<PerspectiveCamera>();\n\n  async clearCanvas(): Promise<void> {\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n      canvasInfo.context.clearRect(\n        0,\n        0,\n        canvasInfo.canvas.width,\n        canvasInfo.canvas.height,\n      );\n    } else {\n      const renderer = await this.renderer();\n      const context = renderer.getContext();\n      context.clear(context.COLOR_BUFFER_BIT);\n    }\n  }\n\n  // TODO: Why doesn't this work for the top-right back view height?\n  #width: number = 0;\n  #height: number = 0;\n  async #onResize(): Promise<void> {\n    const camera = await this.#onResizeStaleDropper.queue(this.camera());\n\n    const w = this.contentWrapper.clientWidth;\n    const h = this.contentWrapper.clientHeight;\n    this.#width = w;\n    this.#height = h;\n    const off = 0;\n    let yoff = 0;\n    let excess = 0;\n    if (h > w) {\n      excess = h - w;\n      yoff = -Math.floor(0.5 * excess);\n    }\n    camera.aspect = w / h;\n    camera.setViewOffset(w, h - excess, off, yoff, w, h);\n    camera.updateProjectionMatrix(); // TODO\n\n    this.clearCanvas();\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n\n      canvasInfo.canvas.width = w * pixelRatio();\n      canvasInfo.canvas.height = h * pixelRatio();\n      canvasInfo.canvas.style.width = `${w.toString()}px`;\n      canvasInfo.canvas.style.height = `${h.toString()}px`;\n    } else {\n      const renderer = await this.renderer();\n      renderer.setSize(w, h, true);\n    }\n\n    this.scheduleRender();\n  }\n\n  #cachedRenderer: Promise<WebGLRenderer> | null = null;\n  async renderer(): Promise<WebGLRenderer> {\n    if (this.rendererIsShared) {\n      throw new Error(\"renderer expected to be shared.\");\n    }\n    return (this.#cachedRenderer ??= newRenderer());\n  }\n\n  #cachedCanvas: Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> | null = null;\n  async canvasInfo(): Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> {\n    return (this.#cachedCanvas ??= (async () => {\n      let canvas: HTMLCanvasElement;\n      if (this.rendererIsShared) {\n        canvas = this.addElement(document.createElement(\"canvas\"));\n      } else {\n        const renderer = await this.renderer();\n        canvas = this.addElement(renderer.domElement);\n      }\n      this.loadingElement?.remove();\n      const context = canvas.getContext(\"2d\")!;\n      return { canvas, context };\n    })());\n  }\n\n  #cachedDragTracker: Promise<DragTracker> | null = null;\n  async #dragTracker(): Promise<DragTracker> {\n    return (this.#cachedDragTracker ??= (async () => {\n      const dragTracker = new DragTracker((await this.canvasInfo()).canvas);\n      this.model?.twistySceneModel.dragInput.addFreshListener(\n        (dragInputMode: DragInputMode) => {\n          let dragInputEnabled = false;\n          switch (dragInputMode) {\n            case \"auto\": {\n              dragTracker.start();\n              dragInputEnabled = true;\n              break;\n            }\n            case \"none\": {\n              dragTracker.stop();\n              break;\n            }\n          }\n          this.contentWrapper.classList.toggle(\n            \"drag-input-enabled\",\n            dragInputEnabled,\n          );\n        },\n      );\n      return dragTracker;\n    })());\n  }\n\n  #cachedCamera: Promise<PerspectiveCamera> | null = null;\n  async camera(): Promise<PerspectiveCamera> {\n    return (this.#cachedCamera ??= (async () => {\n      const camera = new (await bulk3DCode()).ThreePerspectiveCamera(\n        20,\n        1, // We rely on the resize logic to handle this.\n        0.1,\n        20,\n      );\n      camera.position.copy(\n        new (await bulk3DCode()).ThreeVector3(2, 4, 4).multiplyScalar(\n          this.options?.backView ? -1 : 1,\n        ),\n      );\n      camera.lookAt(0, 0, 0);\n      // TODO: `TwistyOrbitControls` breaks isolateion\n      return camera;\n    })());\n  }\n\n  #cachedOrbitControls: Promise<TwistyOrbitControls> | null = null;\n  async orbitControls(): Promise<TwistyOrbitControls> {\n    return (this.#cachedOrbitControls ??= (async () => {\n      const orbitControls = new TwistyOrbitControls(\n        this.model!,\n        !!this.options?.backView,\n        (await this.canvasInfo()).canvas,\n        await this.#dragTracker(),\n      );\n\n      if (this.model) {\n        this.addListener(\n          this.model.twistySceneModel.orbitCoordinates,\n          async (orbitCoordinates: OrbitCoordinates) => {\n            const camera = await this.camera();\n            setCameraFromOrbitCoordinates(\n              camera,\n              orbitCoordinates,\n              this.options?.backView,\n            );\n            // TODO: Wrap in StaleDropper?\n\n            this.scheduleRender();\n          },\n        );\n      }\n\n      return orbitControls;\n    })());\n  }\n\n  addListener<T>(\n    prop: TwistyPropParent<T>,\n    listener: (value: T) => void,\n  ): void {\n    prop.addFreshListener(listener);\n    this.#disconnectionFunctions.push(() => {\n      prop.removeFreshListener(listener);\n      // disconnected = true; // TODO\n    });\n  }\n\n  #disconnectionFunctions: (() => void)[] = [];\n  disconnect(): void {\n    for (const fn of this.#disconnectionFunctions) {\n      fn();\n    }\n    this.#disconnectionFunctions = []; // TODO: Encapsulate this.\n  }\n\n  #experimentalNextRenderFinishedCallback: (() => void) | null = null;\n  experimentalNextRenderFinishedCallback(callback: () => void): void {\n    this.#experimentalNextRenderFinishedCallback = callback;\n  }\n\n  async render(): Promise<void> {\n    if (!this.scene) {\n      throw new Error(\"Attempted to render without a scene\");\n    }\n\n    this.stats?.begin();\n\n    const [scene, camera, canvas] = await Promise.all([\n      this.scene.scene(),\n      this.camera(),\n      this.canvasInfo(),\n    ]);\n    if (this.rendererIsShared) {\n      renderPooled(this.#width, this.#height, canvas.canvas, scene, camera);\n    } else {\n      (await this.renderer()).render(scene, camera);\n    }\n\n    this.stats?.end();\n    this.#experimentalNextRenderFinishedCallback?.();\n    this.#experimentalNextRenderFinishedCallback = null;\n  }\n\n  #scheduler = new RenderScheduler(this.render.bind(this));\n  scheduleRender(): void {\n    // console.log(\"scheduling\", this);\n    this.#scheduler.requestAnimFrame();\n  }\n}\n\ncustomElementsShim.define(\"twisty-3d-vantage\", Twisty3DVantage);\n"],
  "mappings": "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",
  "names": ["transformationData", "pieceStickerings", "LL", "puzzleOrientationCacheRaw", "puzzleOrientationCacheInitialized", "from", "moveSourceInfo", "directedAmount"]
}
